<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>图像期末指南</title>
      <link href="/blog/2021/06/25/tu-xiang-qi-mo-zhi-nan/"/>
      <url>/blog/2021/06/25/tu-xiang-qi-mo-zhi-nan/</url>
      
        <content type="html"><![CDATA[<h2 id="Matlab图像基础"><a href="#Matlab图像基础" class="headerlink" title="Matlab图像基础"></a>Matlab图像基础</h2><pre class=" language-matlab"><code class="language-matlab"><span class="token comment" spellcheck="true">% 读图片</span><span class="token comment" spellcheck="true">% 方法1   </span><span class="token string">'路径'</span>im<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">'路径'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">% 方法2</span><span class="token punctuation">[</span>filename<span class="token punctuation">,</span>filepath<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">uigetfile</span><span class="token punctuation">(</span><span class="token string">'*.*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>im<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token punctuation">[</span>filepath<span class="token punctuation">,</span>filename<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token comment" spellcheck="true">% 彩转灰，3为彩，2为灰</span><span class="token keyword">if</span> <span class="token function">numel</span><span class="token punctuation">(</span><span class="token function">size</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">3</span>    im<span class="token operator">=</span><span class="token function">rgb2gray</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">%方法1</span>    im<span class="token operator">=</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">%方法2，通过提取R分量</span><span class="token keyword">end</span><span class="token comment" spellcheck="true">% 彩转灰的另一种判断方法,3为彩，2为灰</span><span class="token keyword">if</span> <span class="token function">ndims</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">3</span><span class="token keyword">end</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token comment" spellcheck="true">% 写图片，即保存到文件中</span><span class="token function">imwirte</span><span class="token punctuation">(</span>im<span class="token punctuation">,</span><span class="token string">'e:/1.png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token comment" spellcheck="true">% 添加噪声的函数 imnoise 具体使用看帮助文档</span><span class="token comment" spellcheck="true">% </span><span class="token string">''</span>中可以填入  gaussian  salt <span class="token operator">&amp;</span> pepper  等等<span class="token comment" spellcheck="true">% 注意imnoise处理图片的灰度值的类型为uint8或0~1的double型</span>im<span class="token operator">=</span><span class="token function">imnoise</span><span class="token punctuation">(</span>im<span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token function">exp</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">% </span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">% 自然对数ln</span><span class="token function">log2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">% 以二为底</span><span class="token function">log10</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">% 以十为底</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token function">double</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    与 <span class="token function">im2double</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 的区别<span class="token function">double</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    会把图像的灰度值从uint8转为double型<span class="token function">im2double</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 对图像做的是归一化，会把图像的灰度值除以<span class="token number">255</span>，在把图像的灰度值从uint8转为double型，因此图像此时的灰度值范围为<span class="token number">0</span><span class="token operator">~</span><span class="token number">1</span>数据类型为double时，imshow的处理范围是<span class="token number">0</span><span class="token operator">~</span><span class="token number">1</span>数据类型为uint8时，imshow的处理范围是<span class="token number">0</span><span class="token operator">~</span><span class="token number">255</span>因此，数据类型为double且范围是<span class="token number">0</span><span class="token operator">~</span><span class="token number">255</span>，用imshow来显示图片会把大于<span class="token number">1</span>的都当作<span class="token number">1</span>，因此为一片白解决办法：figure<span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>im<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token function">uint8</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>注<span class="token operator">:</span> 图像处理时用double，不会丢失精度，显示图片时用uint8型<span class="token function">zeros</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 构造值全为<span class="token number">0</span>的矩阵，注意类型为double<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 和 <span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 使用法<span class="token comment" spellcheck="true">% 针对一维</span>如 nums<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>temp<span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>temp的值为<span class="token number">3</span>另一种语法<span class="token punctuation">[</span>temp<span class="token punctuation">,</span>index<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>temp的值为<span class="token number">3</span>，index的为<span class="token number">2</span>       <span class="token comment" spellcheck="true">% temp存储的为最大值，index存储的为下标</span><span class="token comment" spellcheck="true">% 针对多维，及矩阵,三个点的作用为在下一行接着写</span>nums<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">...</span>      <span class="token number">3</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">...</span>      <span class="token number">2</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>temp<span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>temp的值为<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>           <span class="token comment" spellcheck="true">% 注意是每一列的最大值</span><span class="token punctuation">[</span>temp<span class="token punctuation">,</span>index<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>temp的值为<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>index的值为<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">% min()的用法与之同理</span></code></pre><h2 id="图像增强"><a href="#图像增强" class="headerlink" title="图像增强"></a>图像增强</h2><h4 id="空域点运算"><a href="#空域点运算" class="headerlink" title="空域点运算"></a>空域点运算</h4><pre class=" language-matlab"><code class="language-matlab"><span class="token comment" spellcheck="true">% 点处理，作用于单个像素的空间域处理方法</span><span class="token comment" spellcheck="true">% 点运算是一种像素的逐点运算，是灰度到灰度的映射过程</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token comment" spellcheck="true">% 灰度变化增强（线性点运算、分段线性点运算、非线性点运算）</span><span class="token comment" spellcheck="true">% 线性点运算，给出一个线性方程f(x)=ax+b，对每个像素进行该方程的处理,看下面的例子(***注意以下是针对灰度图像***)</span>im<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>a<span class="token operator">=</span><span class="token number">1.2</span><span class="token punctuation">;</span>             <span class="token comment" spellcheck="true">% a>1,图像的对比度增加(图像变亮);0&lt;a&lt;1,图像对比度减少（图像变暗）</span>b<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>im<span class="token operator">=</span>a<span class="token operator">*</span>im<span class="token operator">+</span>b<span class="token punctuation">;</span>figure<span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token comment" spellcheck="true">% 上述程序另一中写法</span>im<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>a<span class="token operator">=</span><span class="token number">1.2</span><span class="token punctuation">;</span>b<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span><span class="token punctuation">[</span>row<span class="token punctuation">,</span>col<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>row    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>col        <span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span>a<span class="token operator">*</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">+</span>b<span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span>figure<span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">% 分段线性点运算,给出的方程为一个线性的分段的函数,例如0&lt;=灰度值&lt;150执行f1，150&lt;灰度值&lt;=200执行f2,200&lt;灰度值&lt;255执行f3</span>im<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>row<span class="token punctuation">,</span>col<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span>im<span class="token operator">=</span><span class="token function">im2double</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">% 这把图片的灰度值转为0~1，使运算更合理,精度不会丢失，得到图片的效果更好</span>                        <span class="token comment" spellcheck="true">% 转为0~1后，下面的范围都要除去255</span>res<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span>col<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>row    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>col        <span class="token keyword">if</span> <span class="token number">0</span><span class="token operator">&lt;=</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">150</span><span class="token operator">/</span><span class="token number">255</span>            <span class="token function">res</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">*</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment" spellcheck="true">%f1(x)=x</span>        <span class="token keyword">elseif</span> <span class="token number">150</span><span class="token operator">/</span><span class="token number">255</span> <span class="token operator">&lt;</span> <span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">200</span><span class="token operator">/</span><span class="token number">255</span>            <span class="token function">res</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">2</span><span class="token operator">*</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">0.5</span><span class="token punctuation">;</span>               <span class="token comment" spellcheck="true">%f2(x)=2x+0.5</span>        <span class="token keyword">else</span>            <span class="token function">res</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">-</span><span class="token number">3</span><span class="token operator">*</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">9</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">%f3(x)=-3x+9</span>        <span class="token keyword">end</span>    <span class="token keyword">end</span><span class="token keyword">end</span>figure<span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">% 非线性点运算，给出的方程为非线性的(都有通过循环的方式来做运算)</span><span class="token comment" spellcheck="true">% 反转变换</span>im<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>im<span class="token operator">=</span><span class="token function">im2double</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span>im<span class="token operator">=</span><span class="token number">1</span><span class="token operator">-</span>im<span class="token punctuation">;</span>figure<span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">% 对数变换</span>im<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>im<span class="token operator">=</span><span class="token function">im2double</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span>im<span class="token operator">=</span><span class="token number">0.5</span><span class="token operator">*</span><span class="token function">log</span><span class="token punctuation">(</span>im<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">% 幂次变化</span>im<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>im<span class="token operator">=</span><span class="token function">im2double</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span>im<span class="token operator">=</span><span class="token number">0.2</span><span class="token operator">*</span><span class="token punctuation">(</span>im<span class="token operator">.^</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">% 注意是.^</span>figure<span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token comment" spellcheck="true">% 另一种写法</span>im<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>im<span class="token operator">=</span><span class="token function">im2double</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>row<span class="token punctuation">,</span>col<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>row    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>col        <span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">0.2</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">% 注意针对到每个像素时，用^</span>    <span class="token keyword">end</span><span class="token keyword">end</span>figure<span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token comment" spellcheck="true">% 基于直方图的图像增强法(直方图均衡化、直方图规定化)</span><span class="token comment" spellcheck="true">% 直方图均衡化</span>步骤：<span class="token number">1</span>、读入一张灰度图像<span class="token number">2</span>、统计每个灰度的数目<span class="token number">3</span>、计算概率<span class="token number">4</span>、计算累积概率<span class="token number">5</span>、确定映射im<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>row<span class="token punctuation">,</span>col<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">;</span><span class="token function">imhist</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">% 统计每个灰度的数目</span>count<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>row    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>col        <span class="token function">count</span><span class="token punctuation">(</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span class="token comment" spellcheck="true">% 计算概率</span>p<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">256</span>    <span class="token function">p</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span>row<span class="token operator">*</span>col<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span class="token comment" spellcheck="true">% 计算累积概率</span>s<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">256</span>    <span class="token keyword">if</span> <span class="token number">i</span><span class="token operator">==</span><span class="token number">1</span>        <span class="token function">s</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">p</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        <span class="token function">s</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">s</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">p</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span class="token comment" spellcheck="true">% 确定映射</span>s<span class="token operator">=</span><span class="token function">uint8</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token operator">.*</span>s<span class="token operator">+</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">%进行累积分布取整</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>row    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>col        <span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">s</span><span class="token punctuation">(</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span>figure<span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">;</span><span class="token function">imhist</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token comment" spellcheck="true">% 直方图规定化</span><span class="token comment" spellcheck="true">% 规定化的实现有两种映射方式，单映射和组映射。这两者的区别在于映射的规则不同，之前的步骤大同小异。</span>步骤：<span class="token number">1</span>、读入原图像和标准图像<span class="token number">2</span>、统计原图和标准图的灰度个数<span class="token number">3</span>、计算两者的概率<span class="token number">4</span>、计算累积概率<span class="token number">5</span>、确定映射<span class="token number">6</span>、根据映射得到新图片单映射：单映射为原图当前灰度级的累积概率减去标准图片的所有灰度级的累积概率，取其中差值的绝对值最小的组成映射关系组映射：组映射为标准图片的当前灰度级的累积概率（概率为<span class="token number">0</span>时跳向下一灰度级）减去原图的所有累积概率，取其中差值的绝对值最小的灰度级做一个标志，与之前的灰度级组成一个范围。重复这个过程<span class="token comment" spellcheck="true">% 单映射</span><span class="token comment" spellcheck="true">% 读入原图像和标准图像</span>im<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>im_st<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>row<span class="token punctuation">,</span>col<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>row_st<span class="token punctuation">,</span>col_st<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>im_st<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">% 统计每个灰度的数目</span>count<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>count_st<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>row    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>col        <span class="token function">count</span><span class="token punctuation">(</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>row_st    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>col_st        <span class="token function">count_st</span><span class="token punctuation">(</span><span class="token function">im_st</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">count_st</span><span class="token punctuation">(</span><span class="token function">im_st</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span class="token comment" spellcheck="true">% 计算分布概率（可以使用和上面直方图均衡化中的循环来做，这演示另一中不通过循环的做法）</span>p<span class="token operator">=</span>count<span class="token operator">/</span><span class="token punctuation">(</span>row<span class="token operator">*</span>col<span class="token punctuation">)</span><span class="token punctuation">;</span>p_st<span class="token operator">=</span>count_st<span class="token operator">/</span><span class="token punctuation">(</span>row_st<span class="token operator">*</span>col_st<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">% 计算累积概率</span>s<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>s_st<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">256</span>    <span class="token keyword">if</span> <span class="token number">i</span><span class="token operator">==</span><span class="token number">1</span>        <span class="token function">s</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">p</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">s_st</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">p_st</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        <span class="token function">s</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">s</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">p</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">s_st</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">s_st</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">p_st</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span class="token comment" spellcheck="true">% 确定映射</span>index<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">256</span>    values<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">256</span>        <span class="token comment" spellcheck="true">% 注意：原图减去标准图</span>        <span class="token function">values</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token function">s</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">s_st</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">end</span>    <span class="token punctuation">[</span>temp<span class="token punctuation">,</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">min</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment" spellcheck="true">% 看min()的用法</span><span class="token keyword">end</span><span class="token comment" spellcheck="true">% 根据映射得到新图片</span>res<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span>col<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">%注意zeros生成的矩阵默认类型为double</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>row    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>col        <span class="token function">res</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token function">im_st</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">% 先加1是把灰度值+1与数组下标相映射，后减1是把index中存的下标转为灰度</span>    <span class="token keyword">end</span><span class="token keyword">end</span>res<span class="token operator">=</span><span class="token function">uint8</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">;</span><span class="token function">imhist</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token comment" spellcheck="true">% 组映射</span><span class="token comment" spellcheck="true">% 读入原图像和标准图像</span>im<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>im_st<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>row<span class="token punctuation">,</span>col<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>row_st<span class="token punctuation">,</span>col_st<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>im_st<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">% 统计每个灰度的数目</span>count<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>count_st<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>row    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>col        <span class="token function">count</span><span class="token punctuation">(</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>row_st    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>col_st        <span class="token function">count_st</span><span class="token punctuation">(</span><span class="token function">im_st</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">count_st</span><span class="token punctuation">(</span><span class="token function">im_st</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span class="token comment" spellcheck="true">% 计算分布概率</span>p<span class="token operator">=</span>count<span class="token operator">/</span><span class="token punctuation">(</span>row<span class="token operator">*</span>col<span class="token punctuation">)</span><span class="token punctuation">;</span>p_st<span class="token operator">=</span>count_st<span class="token operator">/</span><span class="token punctuation">(</span>row_st<span class="token operator">*</span>col_st<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">% 计算累积概率</span>s<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>s_st<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">256</span>    <span class="token keyword">if</span> <span class="token number">i</span><span class="token operator">==</span><span class="token number">1</span>        <span class="token function">s</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">p</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">s_st</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">p_st</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        <span class="token function">s</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">s</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">p</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">s_st</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">s_st</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">p_st</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span class="token comment" spellcheck="true">% 确定映射</span>end1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>end2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>index<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">256</span>    values<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token function">s_st</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span>        <span class="token keyword">continue</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">256</span>            <span class="token comment" spellcheck="true">% 标准图减去原图</span>            <span class="token function">values</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token function">s_st</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">s</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">end</span>    <span class="token keyword">end</span>    <span class="token punctuation">[</span>temp<span class="token punctuation">,</span>end2<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">min</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span>end1<span class="token operator">:</span>end2        <span class="token function">index</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">i</span><span class="token punctuation">;</span>    <span class="token keyword">end</span>    end1<span class="token operator">=</span>end2<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">end</span><span class="token comment" spellcheck="true">% 根据映射得到新图片</span>res<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span>col<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">%注意zeros生成的矩阵默认类型为double</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>row    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>col        <span class="token function">res</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token function">im_st</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span>res<span class="token operator">=</span><span class="token function">uint8</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">;</span><span class="token function">imhist</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="空域滤波"><a href="#空域滤波" class="headerlink" title="空域滤波"></a>空域滤波</h4><pre class=" language-matlab"><code class="language-matlab"><span class="token comment" spellcheck="true">% 模板处理,作用于像素邻域的处理方法</span><span class="token comment" spellcheck="true">% 模板，本质为矩阵方块，其数学含义是一种卷积运算</span><span class="token comment" spellcheck="true">% 卷积运算，图像的在模板区域里的每个像素的灰度值和模板对应的数值相乘，在把这些值求和</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>针对卷积运算，有边界处理问题，有三种解决办法<span class="token number">1</span>、丢失边缘信息<span class="token number">2</span>、保留边缘信息<span class="token number">3</span>、扩展图像，根据模板大小扩行扩列<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token comment" spellcheck="true">% 平滑：模糊处理,去除图像中一些不重要的细节;减小噪声</span><span class="token comment" spellcheck="true">% 平滑滤波器(线性滤波器、非线性滤波器)</span><span class="token comment" spellcheck="true">% 线性滤波器(常用线性模板,均值滤波器)</span><span class="token comment" spellcheck="true">% 常用线性模板会给出了，用模板来做卷积运算</span>如模板为 <span class="token operator">:</span>   <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">9</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">[</span> <span class="token number">1</span> <span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">,</span> <span class="token number">1</span>                      <span class="token number">1</span> <span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">,</span> <span class="token number">1</span>                      <span class="token number">1</span> <span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> im<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>im<span class="token operator">=</span><span class="token function">im2double</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>row<span class="token punctuation">,</span>col<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span>res<span class="token operator">=</span>im<span class="token punctuation">;</span>                 <span class="token comment" spellcheck="true">%保留边缘信息</span><span class="token comment" spellcheck="true">% res=zeros(row,col);    丢失边缘信息</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">2</span><span class="token operator">:</span>row<span class="token number">-1</span>            <span class="token comment" spellcheck="true">% 设n为模板大小，当前模板的大小为3，及n=3</span>    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">2</span><span class="token operator">:</span>col<span class="token number">-1</span>        <span class="token comment" spellcheck="true">% 2和row-1的1的算法:起始点=(n+1)/2;终止点=(n-1)/2</span>        <span class="token function">res</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1</span><span class="token operator">+</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1</span><span class="token operator">+</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1</span><span class="token operator">+</span><span class="token punctuation">...</span>                 <span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1</span><span class="token operator">+</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1</span><span class="token operator">+</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1</span><span class="token operator">+</span><span class="token punctuation">...</span>                 <span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1</span><span class="token operator">+</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1</span><span class="token operator">+</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token function">res</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">res</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">9</span><span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span>figure<span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">%均值滤波器 模板就是上面演示的模板</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token comment" spellcheck="true">% 非线性滤波器</span><span class="token comment" spellcheck="true">% 统计排序滤波器(中值滤波器、最大值滤波器、最小值滤波器)</span>演示中值滤波器<span class="token punctuation">(</span>用像素领域内的中值来代替中间像素值<span class="token punctuation">)</span>im<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>row<span class="token punctuation">,</span>col<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span>res<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span>col<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>row    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>col        nums<span class="token operator">=</span><span class="token punctuation">[</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">...</span>              <span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">...</span>              <span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        nums<span class="token operator">=</span><span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">res</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">nums</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">%res(i,j)=nums(1);    最大值滤波器</span>        <span class="token comment" spellcheck="true">%res(i,j)=nums(9);    最小值滤波器</span>    <span class="token keyword">end</span><span class="token keyword">end</span>res<span class="token operator">=</span><span class="token function">uint8</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>s<span class="token comment" spellcheck="true">% 锐化：加强图像的细节边缘和轮廓，增强模糊的细节</span><span class="token comment" spellcheck="true">% 锐化滤波器 -- 水平方向的一阶锐化、垂直方向的一阶锐化、Roberts算子、Sobel算子、Priwitt算子、Laplacian算子、Wallis算子</span>这些都是给定一个模板，让原图像和模板做卷积运算在处理过程中，有些像素的灰度值会变变为负的，处理办法如下：<span class="token number">1</span>、给处理后的图片加上一个正整数，结果是获得类似浮雕效果<span class="token number">2</span>、所有像素取绝对值，结果是获得对边缘的有效提取</code></pre><h4 id="频域图像处理"><a href="#频域图像处理" class="headerlink" title="频域图像处理"></a>频域图像处理</h4><pre class=" language-matlab"><code class="language-matlab"></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>90后性生活图鉴</title>
      <link href="/blog/2021/05/25/90-hou-xing-sheng-huo-tu-jian/"/>
      <url>/blog/2021/05/25/90-hou-xing-sheng-huo-tu-jian/</url>
      
        <content type="html"><![CDATA[<p>最近看到一篇不错的科普文，是关于性相关的科普。</p><p>跳转链接为：<a href="https://www.163.com/dy/article/G4E1ALFM0518BOJ3.html#">https://www.163.com/dy/article/G4E1ALFM0518BOJ3.html#</a></p><h2 id="主体内容"><a href="#主体内容" class="headerlink" title="主体内容"></a>主体内容</h2><p><img src="https://img.maocdn.cn/img/2021/05/25/24.jpg"></p><p><img src="https://img.maocdn.cn/img/2021/05/25/25.jpg"></p><p><img src="https://img.maocdn.cn/img/2021/05/25/26.jpg"></p><p><img src="https://img.maocdn.cn/img/2021/05/25/27.jpg"></p><p><img src="https://img.maocdn.cn/img/2021/05/25/28.jpg"></p><p><img src="https://img.maocdn.cn/img/2021/05/25/29.jpg"></p><p><img src="https://img.maocdn.cn/img/2021/05/25/30.jpg"></p><p><img src="https://img.maocdn.cn/img/2021/05/25/31.jpg"></p><p><img src="https://img.maocdn.cn/img/2021/05/25/32.jpg"></p><p><img src="https://img.maocdn.cn/img/2021/05/25/33.jpg"></p><p><img src="https://img.maocdn.cn/img/2021/05/25/34.jpg"></p><p><img src="https://img.maocdn.cn/img/2021/05/25/35.jpg"></p><p><img src="https://img.maocdn.cn/img/2021/05/25/36.jpg"></p><p><img src="https://img.maocdn.cn/img/2021/05/25/37.jpg"></p><p><img src="https://img.maocdn.cn/img/2021/05/25/38.jpg"></p><p><img src="https://img.maocdn.cn/img/2021/05/25/39.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>跌倒的危害</title>
      <link href="/blog/2021/05/22/die-dao-de-wei-hai/"/>
      <url>/blog/2021/05/22/die-dao-de-wei-hai/</url>
      
        <content type="html"><![CDATA[<p>最近一阵因意外导致更新频率变慢（<del>话说没意外也会鸽的</del>），正如标题所述，本文将科普<strong>跌倒的危害</strong>。</p><h2 id="我的经历"><a href="#我的经历" class="headerlink" title="我的经历"></a>我的经历</h2><p>记得那是要放51劳动假的前几日，地面因昨晚下了雨是湿的，走的地方具有一定的坡度，倒霉的我经过时踩滑了，向后跌倒了，无意识下用手去撑地，结果就是手不能上下左右扭动，我以为不是什么大伤，心想过一会儿就好了，中午和晚上还喷了喷云南白药。第二天手还不见好，就去医院挂号、验伤。结果为三角骨骨折，打上石膏，右手基本不能用。</p><p><a href="https://img.wang/image/18.bFzzF"><img src="https://img.maocdn.cn/img/2021/05/22/18.jpg"></a></p><p><del>上图为我的右手被封印的样子</del></p><p>对于右手不能用之事，确有诸多不便之处。现为第4周，还需再等2周就可以去医院复查。在这段时间中，确实令人感受非凡，我也从中领悟了一些道？具体不便多说，话题还是转回跌倒。</p><p>我的这种状况我自己分析了下，我发现这专吃惯用手，在来不及思考的状况下，基于身体的本能用手去撑地，那股冲击力手是承受不了的，结果就如同我这般，轻则扭伤，重则骨折。这次的跌倒实属出乎我的识，说起来，我在这个学校里跌倒过4次，无疑这第4次是最严重的，对比前3次，都是向后滑，不同处为手的应激反应，之前3次跌倒都成手脚朝天的模样，属实丢脸，受伤状况为屁股疼。因此，此结论为<strong>不要小看跌倒</strong>，跌倒造成的危害我亲身经历过，我有发言权。</p><h2 id="跌倒危害之科普"><a href="#跌倒危害之科普" class="headerlink" title="跌倒危害之科普"></a>跌倒危害之科普</h2><p>跌倒是我国伤害死亡的第四位原因，在65岁以上的老年人中则为首位。每年大约30% 以上的老年人发生过跌倒。老年人一旦跌倒会造成很多不良后果，如骨折，尤其是髋关节骨折最常见，其次是皮肤擦伤、软组织损伤、脑震荡、脑挫裂伤、撞伤或开放伤、关节损伤等，甚至会引起脑出血等更加严重的后果，最终可导致老年人死亡，而更多的则是导致了跌倒的老年人产生了各种身体残疾！</p><h3 id="1-什么是跌倒"><a href="#1-什么是跌倒" class="headerlink" title="1.什么是跌倒"></a>1.什么是跌倒</h3><p>跌倒是指突发、不自主的、非故意的体位改变，倒在地上或更低的平面，是威胁患者安全的重要问题，病房患者治疗期间受病情、药物毒副作用的影响，跌倒发生的风险高，因此跌倒的预防尤为重要。</p><h3 id="2-跌倒高危人群"><a href="#2-跌倒高危人群" class="headerlink" title="2.跌倒高危人群"></a>2.跌倒高危人群</h3><p><img src="https://img.maocdn.cn/img/2021/05/22/22.jpg"></p><h3 id="3-跌倒原因"><a href="#3-跌倒原因" class="headerlink" title="3.跌倒原因"></a>3.跌倒原因</h3><p><img src="https://img.maocdn.cn/img/2021/05/22/19.jpg"></p><h3 id="4-跌倒的危害"><a href="#4-跌倒的危害" class="headerlink" title="4.跌倒的危害"></a>4.跌倒的危害</h3><p><img src="https://img.maocdn.cn/img/2021/05/22/20.jpg"></p><p><img src="https://img.maocdn.cn/img/2021/05/22/21.jpg"></p><h3 id="5-跌倒的预防"><a href="#5-跌倒的预防" class="headerlink" title="5.跌倒的预防"></a>5.跌倒的预防</h3><p>1.长期卧床者，起床时动作缓慢，循序渐进，应遵循<strong>“三部曲”平卧30秒 ，坐起30秒，站立30秒</strong>。即第一个30秒:醒来后，勿立即起床，在床上躺30秒;第二个30秒:起来后，在床沿两腿下垂坐30秒;第三个30秒:下地后，靠床站30秒再行走。</p><p>2.在行走时，避免突然改变体位，引起体位性低血压，特别是夜间。</p><p>3.如您出现双眼发黑，下肢无力，行走不稳时，应立即原地坐（蹲）下或靠墙，并呼叫帮助。</p><p>4.请穿合适尺码的衣裤，不应穿拖鞋行走，鞋子的大小要刚好，注意防滑警示牌，发现地面潮湿时，请绕行。</p><p>5.行动不便，老年体弱，生活不能自理者，请在家属或陪护的陪伴下活动，不要自行离床活动。</p><p>6.如您在服用特殊药物：镇静安神药，降压药，降糖药，利尿药等，勿随意离床活动，应在陪同下行走。</p><p>7.在经常活动的地方，不要堆放杂物，保持走道通畅。</p><p>8.加强照明，卧室留夜灯，室内光线柔和，方便您行动。</p><p>9.卫生间做好<strong>地面防滑处理</strong>，避免发生滑倒事件。</p><p>10.日常生活用品不宜放置过高或过低，放在容易取到的地方。</p><p>11.室内家具摆放位置要合理，保持地面平坦无障碍。</p><p>在医院中，有跌倒10知，看下图</p><p><img src="https://img.maocdn.cn/img/2021/05/22/23.jpg"></p><h3 id="6-不幸跌倒"><a href="#6-不幸跌倒" class="headerlink" title="6.不幸跌倒"></a>6.不幸跌倒</h3><p>自己跌倒怎么起身？</p><p>按照一个原则：不要贸然起身，先评估受伤情况，只有在没受伤的情况下、感到自己有足够力量时，才应考虑站起来。</p><p>遇见别人（特别为老人）跌倒，该如何做？</p><p>切不可急于将老人扶起，应先观察老人的表情、神态，询问摔倒的原因，如遇到昏迷或有语言障碍的病人，即打急救电话；见呕吐病人，应将其头部侧向一边，以防呕吐物返回流入呼吸道引起窒息。如可以交流的老人，视情况给予帮助。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>大致科普了下跌倒，希望能给大家带来收获，还希望大家能对此引起重视。写下此文，故以记录，勿悲，勿忘，勿怒，勿现，吸取，向前，将，有义。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>USB科普</title>
      <link href="/blog/2021/04/24/usb-ke-pu/"/>
      <url>/blog/2021/04/24/usb-ke-pu/</url>
      
        <content type="html"><![CDATA[<p>USB，<strong>U</strong>niversal <strong>S</strong>erial <strong>B</strong>us，<strong>通用串行总线</strong>，是连接计算机系统与外部设备的一种串口总线标准，被广泛的应用于个人电脑和移动设备等通讯产品。</p><h2 id="针对USB的简单科普"><a href="#针对USB的简单科普" class="headerlink" title="针对USB的简单科普"></a>针对USB的简单科普</h2><p>首先，目前常用的USB规范为USB2.0（<del>这个已经落后了</del>）、USB3.0（USB 3.1 Gen1/USB 3.2 Gen1）、USB3.1（USB 3.1 Gen2/USB 3.2 Gen2x1），<strong>传输速度</strong>是这三种规范的最大不同。USB2.0的传输速度最高为480Mbps，即60MB/s；USB3.0的理论传输速度为5.0Gbps，即500MB/s；USB3.1的理论传输速度为10Gbps，即900MB/s。对于这三者我介绍一个<strong>简单的区分方式</strong>：<strong>标识区分法</strong>（通过插口旁边的符号来区分）。</p><p><img src="https://img.maocdn.cn/img/2021/04/24/16.png"></p><p>介绍完USB的规范后，我们还应该了解USB<strong>接口的类型</strong>。同上，介绍最常见的四个类型。</p><p><strong>Type-A：标准版 USB 接口</strong></p><p>Type-A 是我们最常见的一种 USB 接口类型，在电脑上常用。但它有一些显著问题：有方向要求。必须从某个特定的方向才能将接头(公口)插入接口(母口)，但由于 USB 公口的两面外形非常接近，这个插入的过程经常出错。</p><p><strong>Type-B：打印机设备常用</strong></p><p>Type-B 是在打印机上最为常见和流行的一种数据接口类型，以及部分显示器也会被使用这样的接口。</p><p><strong>TYPE Micro-B：移动设备的 USB 标准</strong></p><p>最开始推出的安卓手机中采用的是 Micro USB 接口(即 USB Micro-B)，这种接口至今仍被广泛地应用在各种移动便携式设备上。</p><p><strong>Type-C：或将成为主流</strong></p><p>Type-C 虽然出现不久，但可以预见，随着 USB Type-C 技术的成熟，未来的各种笔记本、平板电脑甚至是智能手机都会开始普及 USB Type-C 接口。现在的Type-C基本有大一统的趋势了，基本上新出的电子设备都在将USB口设置为Type-C 接口。</p><p><img src="https://img.maocdn.cn/img/2021/04/24/17.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>21Y3近况总结</title>
      <link href="/blog/2021/03/28/21y3-jin-kuang-zong-jie/"/>
      <url>/blog/2021/03/28/21y3-jin-kuang-zong-jie/</url>
      
        <content type="html"><![CDATA[<p>还有3天3月就结束了，在这个时间段里属实不太行（<del>学习学到自闭是种什么感觉</del>）。先说说目前的自学成果，在这一个月里，重新学习了HTML，CSS。学完之后去了解了一下HTML5和CSS3的内容，进而去攻取JS，顺着JS又学习了html DOM，JSON，Ajax，JQuery和Vue。在j2ee上先自学完了servlet和jsp（这两个这学期web课要讲的），针对前端还学习了svg和canvas。写到这儿我都有点想吐槽自己了，越是学越能感觉到自己能力上的不足，学习的这些内容在规则上是很简单的，有些都是想通的，但到了我这里就尽显自闭气氛。总结为一句话，<strong>不熟练，很不熟练！</strong>针对这一点的解决办法为在后几个月主要为练习，多敲多敲总是有益的。</p><p>近来比较常玩的游戏为<strong>noita</strong>，针对游戏的感悟及理解会放在后面的总结里。</p><p>最后，分享一下我目前常用的两个学习网站。</p><p><a href="https://www.twle.cn/">简单教程</a></p><p><a href="https://how2j.cn/">How2j</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>扣图指南</title>
      <link href="/blog/2021/03/14/kou-tu-zhi-nan/"/>
      <url>/blog/2021/03/14/kou-tu-zhi-nan/</url>
      
        <content type="html"><![CDATA[<p>今天闲来无事，扣了扣图，一共扣了四张图，共计时间50分钟。本人使用的是PS（并未系统学习过），用的是钢笔扣图（<del>今天才学的</del>），之前只会用快速选择等等方法。下图是今日的成果：</p><p><img src="https://img.maocdn.cn/img/2021/03/14/PSlx1.png"></p><p>在今天的扣图之旅中，学习到的内容为：钢笔扣图，按键盘上<strong>P键</strong>将工具变为钢笔工具，用钢笔将图的外扩勾好后，按下<strong>ctrl+Enter</strong>键将勾好的内容变为选区。在扣图的途中，按下<strong>空格键</strong>会将工具变为抓取工具，方便拖动图像；按下<strong>ctrl+shift+i键</strong>会反选选区。扣图完成后，我不禁思考起一个问题，如何高效的扣图？</p><h2 id="画图3D"><a href="#画图3D" class="headerlink" title="画图3D"></a>画图3D</h2><p>这是我在知乎上看到的一个方法，挺不错的。使用的是<strong>win10自带的画图3D</strong>，对于我这等小白来说，不需要多专业的去操作，很简单就可以实现。打开软件后，按下左上角的<strong>神奇选择</strong>按钮，将要扣的东西选择好，之后按照需求增加选区的范围就行了（用这个方法，除了可以扣图外，还可以<strong>去水印</strong>）。对于图片的拖动，可以按着<strong>alt键</strong>后用鼠标拖动。</p><h2 id="扣图网站"><a href="#扣图网站" class="headerlink" title="扣图网站"></a>扣图网站</h2><p>不想自己动手扣图的话，可以选择去扣图网站，简单方便。我在这里就不推荐，如有需求可以利用搜索引擎去寻找。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>对于非专业者，上述的两种方法是十分实用且简单高效的。如果想要进阶的话，是需要自己去系统的学习。对于我而言，纯属些许兴趣罢了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql自学笔记</title>
      <link href="/blog/2021/03/08/mysql-zi-xue-bi-ji/"/>
      <url>/blog/2021/03/08/mysql-zi-xue-bi-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="数据库的基本操作"><a href="#数据库的基本操作" class="headerlink" title="数据库的基本操作"></a>数据库的基本操作</h2><pre class=" language-mysql"><code class="language-mysql">在cmd(以管理员身份运行)中:开启服务net start mysql57停止服务net stop mysql57#mysql57是下载mysql时的默认服务名显示数据库show databases;创建数据库create database if not exists school;创建数据库并设置字符编码为gbk(utf8)create database if not exists school charset=gbk;删除数据库drop database if exists school;查看创建的数据库show create database school;修改数据库 设置字符编码为utf8alter database school charset=utf8;使用school数据库use school;</code></pre><h2 id="表的基本操作"><a href="#表的基本操作" class="headerlink" title="表的基本操作"></a>表的基本操作</h2><pre class=" language-mysql"><code class="language-mysql">显示表show tables;最为简单的创建表create table if not exists student(    id int,    name varchar(30),    age int);标准的创建create table if not exists student(    id int(4) auto_increment primary key comment 'id',    name varchar(30) not null comment '名字',    address varchar(30) default '未知' comment '地址',    age int(3))engine=innodb;# auto_increment 自动增长# primary key    主键# comment ''     内注释# not null       填写时非空# default ''     设置默认值# engine=innodb  引擎(后面内容)查看表的结构desc student;删除表drop table if exists student;删除多张表,用逗号隔开drop table if exists stu,ooo,jjj;修改表，增加一个字段alter table student add phone varchar(10);修改表，在id后面加入一个字段alter table student add sex varchar(2) after id;修改表，加一个字段在开头alter table student add gender varchar(2) first;修改表，删除字段alter table student drop gender;修改表，修改表中的字段alter table student change sex gender varchar(4);修改表，只修改表中字段的类型alter table student modify phone varchar(1);修改表，把表重命名alter table student rename to person;</code></pre><h2 id="数据操作"><a href="#数据操作" class="headerlink" title="数据操作"></a>数据操作</h2><pre class=" language-mysql"><code class="language-mysql">插入数据insert into teacher(id,name,phone,address) values(1,'Frank','1888888','上海');insert into teacher values(2,'Tom','000000','北京');   #teacher这个表后面的括号可以省略不写，省略后必须按照表的顺序来填写数据insert into teacher values(null,'jerry',null,null);#id字段为自动增长，写入 null时就会自动增长//name字段设置为 not null，因此性质决定不能为空#address字段可以写 null和 default，写入 default后会按照默认值存入insert into teacher(name,phone,address) values('haichao',null,null);#对于插入数据还可以这样写 插入多条数据insert into teacher values(null,'tom',null,null),(null,'jerry',null,null);删除数据delete from teacher where id=9;#删除 从 teacher表  在哪儿 -> id=9;#删除要按照唯一确定的来删，如不能以name来删，如删除name='张三'的，这样会把name为张三的全部删除delete from teachar where age>30;#删除age>30的数据清空表delete from teacher;#删除所有的数据，不推荐的写法#delete是遍历方式，性能不好，并且key值及会接着自动增长（如删除数据后新插入数据的id会为id=10这种）truncate table student;#清空表，过程为将整个表干掉，再重新创建删除的表更新数据update teacher set name='frank' where id=1;#更新 teacher表 在id=1的地方 重设置name为frank#where后的语句注意唯一性update teacher set name='frank',address='beijing' where id=1;#当没有 where时，会将所有的数据都修改update teacher set name='frank' where id=1 or id=2;#多条件的写法查数据（基本）select id,phone,address from teacher;#查id，phone，address这三个字段select * from teacher;#查所有字段从teacher这张表中#不推荐使用，性能有缺陷SQL语句区分DDL(data definition language)数据库定义语言(针对数据库) create alter drop showDML(data manipulation language)数据库操纵语言(针对数据) insert update delete selectDCL(data control language)数据控制语言(针对用户的)字符编码问题show variables like 'character_set_%';#在win10下，要显示中文必须使 character_set_client和character_set_results的值为gbkset character_set_client=gbk;#修改的方式#在实际开发中，character_set_%的值一定为utf8(遵循国际化),目前练习阶段可以为gbk。</code></pre><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p><strong>int 类型实际操作和注意事项</strong></p><pre class=" language-mysql"><code class="language-mysql">像人类年龄这种，就可以应用 tinyint unsigned因为年龄是不可能为负数，所有采用 unsigned ,并且年龄值不会超过255，所以采用 tinyint建表时 如: id int(4) auto_increment primary key comment 'id',int(4) 表示id采用的是int类型，(4)表示的是宽度，在插入数据时超过这个宽度也是可以的，但不能超过int类型的范围。</code></pre><p><strong>浮点数</strong></p><pre class=" language-mysql"><code class="language-mysql">用法:number_1 float(4,1)  (4,1)表示总长度有4位，小数位有1位。number_2 double(4,2) (4,2)表示总长度有4位，小数位有2位。在应用时:insert into test values(1.9,1.99999999); 当小数位超过定义的小数位宽度时，会四舍五入。有时也会发生精度丢失,如 values(1.9,1.111111)时，存入的值可能会变成1.10这种</code></pre><p><strong>定点数</strong></p><pre class=" language-mysql"><code class="language-mysql">用法:money decimal(20,19) (20,19)表示总长度有20位，小数位有19位。在 money 的存储中就可以用 decimal。decimal 存储的小数不会发生精度丢失，原因在于 decimal 的整数部分和小数部分是分开存储的。decimal 存储的小数当超过定义的宽度时同样会发生四舍五入。</code></pre><p><img src="https://img.maocdn.cn/img/2021/02/05/1.png"></p><p><strong>字符串和文本</strong></p><pre class=" language-mysql"><code class="language-mysql">char    定长字符串varchar 变长字符串 常用的字符串，会回收没有用到的空间，效率没有 char 高。text 常文本数据 如博客文章数据很多，就可以用这个。</code></pre><p><img src="https://img.maocdn.cn/img/2021/02/05/2.png"></p><p><strong>布尔</strong></p><pre class=" language-mysql"><code class="language-mysql">boolean 布尔类型用法:flag boolean,insert into test values(false);  boolean 值有 false 和 true, true 保存为1, false 保存为0。</code></pre><p><strong>枚举</strong></p><pre class=" language-mysql"><code class="language-mysql">用法:gender enum('man','woman','?','nothing')  对于这4个数据是以1，2，3，4进行管理的insert into test values('man'),(1)        存入的两个数据都是字符串man对于枚举里没有的数据写入会报错，如('www'),(5)这种好处:节省空间（存储的是数字，一个占2个字节），速度快，限制数据。</code></pre><p><strong>集合set</strong></p><pre class=" language-mysql"><code class="language-mysql">用法:hobby set('哲学','数学','IT','NBA','动漫')insert into test values('哲学,数学,IT,动漫')    注意 set和 enum的区别为选多个内容，并且是放在一起，用逗号分开错误列子为: insert into test values('哲学','数学','动漫','IT')</code></pre><p><strong>时间日期类型</strong></p><pre class=" language-mysql"><code class="language-mysql">行业规定，每一张表都应该有一个时间日期类型，表示这个数据是什么时候插入，删除等等。常用的时间日期类型为 datetime用法:createTime datetime insert into test values('2021-2-5 20:13:00')   这个一般都是由程序来建立准确的时间日期</code></pre><p><img src="https://img.maocdn.cn/img/2021/02/05/3.png"></p><h2 id="列属性完整性"><a href="#列属性完整性" class="headerlink" title="列属性完整性"></a>列属性完整性</h2><ul><li><strong>sql内注释和代码注释</strong></li></ul><p>单行注释</p><pre class=" language-mysql"><code class="language-mysql">-- 注释内容#注释内容</code></pre><p>多行注释</p><pre class=" language-mysql"><code class="language-mysql">/*注释内容*/</code></pre><p>内注释</p><p>字段后面加 **comment ‘注释内容’**，好处：可以给操作人员一个好的提示。</p><ul><li><strong>数据库完整性（理论，自己学）</strong></li></ul><p>①保证字段完整，要有一个主键来唯一标识</p><p>②数据类型要正确，有些字段可以为空，有些不能为空，有些字段应有default</p><p>③可能需要对外部的引用</p><p>④自定义约束</p><ul><li><strong>default</strong></li></ul><p>设置默认值，一个例子：在高考时，有个学生没有来，此时插入数据（考试成绩）不能填为0或null，此时应填为default（设置为缺考）。</p><ul><li><strong>auto_increment</strong></li></ul><p>自增。填了auto_increment必须是primary key，而primary key不一定是auto_increment。</p><ul><li><strong>primary key</strong></li></ul><p>主键，绝对唯一，能够区分大众数据，而且是当中最重要的一块，且具有唯一性，且能够确认数据的唯一性，存在性，不可重复性，</p><p>且有可能与其他的表产生关系。简单来说，primary key唯一的，不可重复的，必须要有，能被其他表引用。在插入数据时，主键值不能为null，当设置了auto_increment后可以将主键值设为null。</p><p>选择主键：最少情况选一个字段为主键，尽可能选更新改动少的，如id，身份证号。用一个主键就可以了，两个不好维护，用数字来作为主键（字符串不好处理）。</p><p>设置主键的好处：①保证数据的完整性②加快查询某种数据的速度</p><p><strong>后期（建完表之后）添加主键与删除主键</strong></p><pre class=" language-mysql"><code class="language-mysql">alter table teacher add primary key (id);alter table teacher drop primary key;</code></pre><ul><li><strong>组合键</strong></li></ul><p>一个表里不能有多个主键，但是能有多个字段组成的一个组合键，也可称为复合主键（依旧是一个主键）。</p><p>一个极端的使用案例：网站，id唯一，有些网站的昵称不可重复，可以这样使用组合键，但会出现问题——&gt;在查询时无法确定是以id还是name为准，及扩展性不好。</p><p><strong>设置组合键</strong></p><p>①在创建表时直接给</p><p>②后期添加</p><pre class=" language-mysql"><code class="language-mysql">alter table teacher add primary key (id,name);</code></pre><ul><li><strong>唯一键</strong></li></ul><p>唯一的，不可重复，且可以为null，与主键不同的是不能区分数据。在一个表中可以有多个唯一键，唯一键的作用：保证数据的不可重复性。在上述组合键的那个极端案例中就应使用唯一键。</p><p><strong>添加唯一键</strong></p><p>①在创建表时加入    使用<strong>unique</strong>关键字</p><p>②后期添加与删除</p><pre class=" language-mysql"><code class="language-mysql">alter table teacher add unique (name);alter table teacher drop index name;</code></pre><p>③添加多个唯一键</p><p>创建表时在需要的字段后面写入关键字 <strong>unique</strong></p><p>后期添加</p><pre class=" language-mysql"><code class="language-mysql">alter table teacher add unique (name,phone);</code></pre><ul><li><strong>外键</strong></li></ul><p>当两个表中有公共字段时，字段名不一定相同，此时可以使用外键来进行关联（如食堂交易表会使用到学生表的id）。<strong>外键只是学习用，实际开发中，对于并发的项目的处理禁止使用外键。</strong></p><p><strong>添加外键</strong></p><p>①在创建表时</p><pre class=" language-mysql"><code class="language-mysql">stuId int(4),     #定义的数据类型要和主表中的一致foreign key (stuId) references student (id),设置一个外键   是谁       它从哪张表来   从student表中的id字段</code></pre><p>②后期添加</p><pre class=" language-mysql"><code class="language-mysql">alter table teacher add foreign key (stuId) references student (id);</code></pre><p>③删除外键</p><pre class=" language-mysql"><code class="language-mysql">alter table teacher drop foreign key teacher_ibfk_1;#teacher_ibfk_1是这个外键的别名，删除外键不能通过字段来直接删除，要删除外键的别名#查看外键别名show create table teacher;</code></pre><p><strong>针对外键的操作</strong></p><p>置空操作：主表中id=5的人的数据被删除后，从表中对应的外键值会被设置为null。</p><p>级联操作：主表中id=5的人的数据被更新后（如id变为9），从表中对应的外键值会相应的变化。</p><p>置空操作一般是留给外界删除数据用的，级联操作一般是留给外界更新数据的。</p><pre class=" language-mysql"><code class="language-mysql">#在创建表，添加外键时foreign key (stuId) references student (id) on delete set null on update cascade# on delete set null 为置空操作# on update cascade  为级联操作</code></pre><h2 id="数据库设计思维"><a href="#数据库设计思维" class="headerlink" title="数据库设计思维"></a>数据库设计思维</h2><p>关系？  关系型数据库  两张表的公有字段去确定数据的完整性</p><p>行？  一条数据  一条数据记录  实体</p><p>列？  一个字段   属性</p><p>注意<strong>避免字段冗余</strong>，例如：总分这个字段，大学期末成绩考试的成绩不重视于总分，因此不需要这个字段；对于高考成绩来说，虽说总分可以由其余分数之和可得，但还是需要这个字段，原因在于高考查询人数很多，对于总分的权重更高。</p><p><strong>实体和实体之间的关系</strong>：1、一对一（一个家教指导一个学生）2、一对多（一个学生对于食堂的多条消费）3、多对一（多个程序员干一个项目）4、多对多（多个程序员完成多个项目）</p><p>遵循Codd六种范式，<strong>尽可能遵守</strong>，事实情况下，能用三个就不错了。</p><p>第一范式，确保每列字段的原子性（及<strong>保证每列字段不可再分</strong>）。拆分主要看：需要统计就要拆分，不需要统计时就不拆分。例：地区人口普查，按什么什么省，什么什么市来拆分，及省和市这有两个字段；而填写家庭地址时，就一个address字段，不需要拆分成省和市。</p><p>第二范式，非键字段必须依赖于键字段（及<strong>在该表中的字段要符合</strong>，如不能够在学生表中加一个总财产的字段，这显然不合理）。</p><p>第三范式，消除传递依赖（及<strong>多余的字段要考虑去掉</strong>）。</p><h2 id="单表查询"><a href="#单表查询" class="headerlink" title="单表查询"></a>单表查询</h2><pre class=" language-mysql"><code class="language-mysql">select # select 可以做计算select 2*7;select '你好' as '世界';# as 取别名   '世界'作为字段名from# from ?? 来自哪张表select * from t1,t2;      # 查询所有数据从t1和t2表中，这个会出现笛卡尔积的现象dual# 默认伪表select 2*7;本质上是 select 2*7 from dual;where# 条件筛选用的。有< <= = >= > and or notinselect * from t4 where address in('beijing','shanghai');等价于select * from t4 where address='beijing' or address='shanghai';# in前可以加一个not，表示不包含这些数据的。between  and# 在...之间select * from t4 where age between 15 and 20;# 这个区间为[15,20]# between 前可以加not，表示取反is null# 是不是为空select * from t4 where age is null;# null 前可加 not,表示非空聚合函数（作统计用）# 求一张成绩表中所有语文成绩的和select sum(chinese) from score;# chinese 为score表中字段# 求平均值select avg(chinese) from score;# 求该列最大最小值max() / min()# 统计次数count()like 模糊查询select * from student where name like '张%';# 查性张的所有人，%表示一个或多个字符select * from student where name like '张_';# _(下划线)表示一个字符order by 排序查询select * from score order by math asc;# 从score表中查所有数据通过math升序排# asc 升序  desc  降序group by 分组查询# 求一个表中男性的平均年龄和女性的平均年龄select avg(age) as '年龄' , gender as '性别' from student group by gender;# 记住，要使用group by, 查询的字段必须是分组字段和聚合函数group_concat# 使数据聚合显示select group_concat(name),gender from student group by gender;having# 用于查询后的表（如分组查询后构成的虚拟表）的条件筛选# 而 where是用作原来的表（及查询前有的表）作条件筛选select avg(age) as 'age', address as 'address' from student group by address having age>24;distinct / all# distinct 去重select distinct address from student;select address from student; 本质上是 select all address from student;</code></pre><h2 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h2><pre class=" language-mysql"><code class="language-mysql">union 联合查询select name,age from student union (这里本质上有 all,可换为 distinct) select name,age from teacher;inner join# 内连接,一定要有公共字段select name,score from student inner join score on student.id=score.stuId;# 一张学生表，一张学生的成绩表，两者有个公共字段# student inner join score ,将student表和score表进行内连接# on student.id=score.stuId,通过两张表中的公共字段作为连接依据left join# 左连接，以左表为基准（基准含义为:当基准表中有的而非基准表中没有的会将基准表中的显示出来）right join# 右连接，以右表为基准cross join# 交叉连接select * from t1 cross join t3;# 会返回一个笛卡尔积natural join# 自然内连接，会以同名字段作为两张表的连接依据natural left join / natural right join    自然左/右连接# 当无同名字段时，会返回笛卡尔积# 当自然连接时有两个或两个以上的同名字段，会返回空表回来# 当自然连接时有两个或两个以上的同名字段，会返回空表回来using# 用来指定连接的字段（当两张表有同名字段时）select * from t1 inner join t3 using(id);# 实际上不常用自然连接和using，一般用inner join 进行内连接并写全代码</code></pre><h2 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h2><pre class=" language-mysql"><code class="language-mysql">基本语法# 查询分数表中分数大于85分的学生在学生表中的所有信息select * from student where id in(select stuId from score where score>=85);# not in 取反  in 可理解为相同，等于exists/not exists  存在/不存在select * from student where exists(select stuId from score where score>=85);# 如果有人分数>=85就查询全班所有人的信息</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>21Y1-2游戏总结</title>
      <link href="/blog/2021/02/28/21y1-2-you-xi-zong-jie/"/>
      <url>/blog/2021/02/28/21y1-2-you-xi-zong-jie/</url>
      
        <content type="html"><![CDATA[<p>如标题所言，本篇文章是对于我在2021年1至2月所游玩的游戏的一个总结。为什么要做一个总结呢？我想记录一下在这个时间段里我游玩的游戏以及这些游戏带给我的<del>感动</del>。</p><h2 id="HADES"><a href="#HADES" class="headerlink" title="HADES"></a>HADES</h2><p>作为<strong>2020年的年度最佳独立游戏</strong>，由制作过《堡垒》《晶体管》的制作组<strong>Supergiant Game</strong>开发，一款上手门槛较低，令人眼前一亮，又极易上瘾的<strong>Roguelike</strong>游戏。早在预购阶段，我就关注到了这个游戏，碍于时间原因，我直到1-2这个时间段才完整的通关（<del>将王子老妈带回来了</del>），目前对于这款游戏还有一些目标，如全好感度的卡通物收集，后续剧情的打通（众神宴）和高热度的挑战等等。</p><p>在我刚开始玩这款游戏时，我被其剧情和画面所震撼，话不多说，先放几张游戏截图。</p><p><img src="https://img.maocdn.cn/img/2021/03/01/hades1.png"></p><p><img src="https://img.maocdn.cn/img/2021/03/01/hades2.png"></p><p><img src="https://img.maocdn.cn/img/2021/03/01/hades3.png"></p><p><img src="https://img.maocdn.cn/img/2021/03/01/hades4.png"></p><p><img src="https://img.maocdn.cn/img/2021/03/01/hades5.png"></p><p><img src="https://img.maocdn.cn/img/2021/03/01/hades6.png"></p><p>从上至下6张截图分别是游戏里<strong>塔耳塔罗斯</strong>的景色、<strong>水仙花平原</strong>的景色、<strong>至福乐土</strong>的景色、打败哈迪斯后前往希腊途中看见的<strong>日升</strong>的景色、<strong>冥府殿</strong>的蝙蝠视角图、母亲归来解锁的画像。</p><p>对于剧情部分，我只能这样说，本作的<strong>文本量十分大</strong>，在我的映象里，到接老妈回家的一次次挑战中，与人物的对白很少有重复的。对于每一局的战斗，一个字，爽。但容易发生按坏键的问题（<del>我电脑的空格键就有点失灵的感觉</del>）和手按酸的问题。关于HADES，我说说我体验到的不好的地方：资源的获取太少了，在前期还好，主要出现在中期，武器形态的解锁和升级所需的泰坦血、人物好感度提升所需的蜜酒和仙酒、买歌和部分家具所需的钻石和宝石、提升天赋需要的黑暗。那么我们开一局（非新热度的挑战）所能获得的资源为泰坦血和钻石2选1（这还是一局里省金币才能买到），对于这点来说还是太费肝了（<del>我选择改游戏源码来调资源</del>）。</p><p>最后，感谢HADES伴我度过了50h的开心时光，下次空闲的时候在见吧！</p><h2 id="姬恋"><a href="#姬恋" class="headerlink" title="姬恋"></a>姬恋</h2><p>在1月末玩的，本想玩后就写一篇来纪念的，没想到拖到了今天。。。这个游戏怎么说呢，首先是游戏类型，我不太清楚详细的游戏类型的区别，就姬恋而言我不知ADV和galgame这两个标签哪一个对于这个游戏来说更好，我就以我的主观来选择，我选<strong>ADV</strong>（<del>少敲4次键盘</del>）。</p><p>姬恋，完整的全名为<strong>姬恋~缚羽的欠片</strong>，玩的版本为v1.04。<strong>有R18内容</strong>，请按照游戏一开始的警告：未成年请在家长的陪同下游玩。不开玩笑了，先聊聊这个游戏的剧情，百合作，一共有4条线，游戏简述为从小分离的姐妹再次相逢后的的<strong>恋爱故事</strong>。作为<strong>我玩的第一款百合作</strong>，两条坏线太伤我心了。其他先不多说，先来认识认识本作的两位主角。</p><p><img src="https://img.maocdn.cn/img/2021/03/01/jl1.jpg"></p><p><img src="https://img.maocdn.cn/img/2021/03/01/jl2.jpg"></p><p>游玩体验：最满意的是姐姐拥抱妹妹及<strong>结婚</strong>这条线（第一次打出的就是这条），对于妹妹拥抱姐姐这条<strong>私奔线</strong>来说也还行，剩下的两条坏线可真难受，一个是姐姐病娇化，一个是妹妹病娇化，可谓是心痛，这难道就是传闻中的心意不相通造成的结果吗，我还是没法接受这两条线，想起来就难受。对于本作游玩过程中体验不好的地方也有，就是在新开推妹妹主导的线路时剧情没有太多的变化，咱都是一路快进跳过看的，感觉就是在几个关键的选择后就导向结局一样。下面，分享一些截图，有一张是结婚线最后结局（<del>瑟瑟的图片是不能发滴</del>）。</p><p><img src="https://img.maocdn.cn/img/2021/03/01/jl3.png"></p><p><img src="https://img.maocdn.cn/img/2021/03/01/jl4.png"></p><p>最后，作为我入门的第一款百合作，成功的让我有了兴趣去推其他作品，感谢姬恋伴我度过的时光。</p><h2 id="夏日狂想曲"><a href="#夏日狂想曲" class="headerlink" title="夏日狂想曲"></a>夏日狂想曲</h2><p>完整的全称为夏日狂想曲+ 乡间难忘的回忆，玩的版本为v2.02。游戏类型为<strong>SLG</strong>，嗯，又是一部具有<strong>R18</strong>内容的游戏，大致简述一下开头剧情吧，在这个夏天，你的父母因为工作忙，将你寄托在了堂姐的家中，无论对堂姐一家人做多么奇妙的事情都可以被原谅，只要你撒撒娇，就可以享受大姐姐和阿姨全心全意的爱意，那么赶紧去度过一个难忘的夏天吧。总结一下，<strong>小马拉大车</strong>的一部作品。</p><p>游戏内是你作为主角度过30天，每天结束的时候男主会将今日最难忘的事情作一个绘图日记（绘图日记的收集数一共有92页，这个挺难全收集的），在这30天里留下难忘的回忆。第一周目完成后，可选择将属性<strong>继承</strong>到第二周目（常规模式）。主线是和家里的3位亲人提升好感度，其还有5条支线，通过支线完成任务后可以提升与各位支线女主的好感度。唔姆，在这儿就不说H相关的内容，单单谈论一下这个游戏里面内置的小游戏，说实话，小游戏还挺好玩的。这些小游戏都要需要控制好<strong>计量条</strong>，如和结衣姐姐的四则运算，帮帮美雪姑姑洗碗，钓鱼，玩拍拍卡，和镜姐姐训练跑步这些，其他的就不多说了，放一些截图（<del>瑟瑟的图是不可能传的</del>）。</p><p><img src="https://img.maocdn.cn/img/2021/03/01/xr1.png"></p><p><img src="https://img.maocdn.cn/img/2021/03/01/xr2.png"></p><p><img src="https://img.maocdn.cn/img/2021/03/01/xr3.png"></p><p><img src="https://img.maocdn.cn/img/2021/03/01/xr4.png"></p><p>第四张图片是我将各个女主A在一起用来回忆回忆用的。</p><p>最后，我相信男主留下了无数宝贵的回忆（<del>29日的特殊回想，让我心痛姑父一秒，同时我还想说一句，姑父，您那顶新帽子可真好看</del>），而我在这个游戏里也度过了一段不错的时光，我不禁回想，夏日的时光，可能我已经体会不到如同游戏里那种纯粹的快乐，但我在游玩的这段时间里，我无疑是体会到了夏日的感觉，这种感觉，有点不错的。感谢夏日伴我度过的20h，那阵阵蝉叫（<del>蝉在叫，人坏掉</del>）不会使我忘却本人玩过这款游戏滴。</p><h2 id="总谈"><a href="#总谈" class="headerlink" title="总谈"></a>总谈</h2><p>其余还有5款游戏，就不 一 一 记录了。可能有人会问我（<del>我自问自答的</del>），好好的假期被游戏所荒废，你不心痛吗？我肯定的回答到，不心痛。流逝的时间不会因我心痛不心痛而回来，何况我在这些时间里体验？经历？那种都好，我以第三人称的视角去见证他们的物语（故事），我这人啊，就是喜欢看故事，爱幻想，那么，在我如今如此佛系的境况下，时常感到无聊，在极度无聊的状况下啥事都不想干，什么也不去妄想，无意义无意义无意义。。。最终会如何变化呢？总之，感谢伴我度过的时光，OVER。（<del>有种写公开日记的感觉，好羞耻啊，我博客部署在码云上，应该没人看吧，应该吧</del>）</p>]]></content>
      
      
      
        <tags>
            
            <tag> 游后感 </tag>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速排序</title>
      <link href="/blog/2021/02/19/kuai-su-pai-xu/"/>
      <url>/blog/2021/02/19/kuai-su-pai-xu/</url>
      
        <content type="html"><![CDATA[<h2 id="快速排序的介绍"><a href="#快速排序的介绍" class="headerlink" title="快速排序的介绍"></a>快速排序的介绍</h2><p>快速排序是由冒泡排序演变而来的算法，同冒泡排序一样，快速排序也属于<strong>交换排序</strong>（通过元素之间的比较和交换位置来达到排序的目的），快速排序比冒泡排序要高效很多，这主要是快速排序采用了[<strong>分治法</strong>]，及<strong>快速排序在每一轮挑选一个基准元素，并让其他比它大的元素移动到数列的一边，比它小的元素移动到数列的另一边，从而把数列拆解成了两个部分，这两个部分在下一轮中又同理分别被拆解为两个部分，直至不可在拆解</strong>。对比于冒泡排序在每一轮只把一个元素移动到数列的一端来说，效率更高，因此被称作快速排序。</p><h2 id="基准元素的选择"><a href="#基准元素的选择" class="headerlink" title="基准元素的选择"></a>基准元素的选择</h2><p>最为常见的方式是<strong>选择数列的第一个元素</strong>。这种选择在大部分情况下都没问题，但是当一个逆序数列要排序成顺序数列，这时整个数列在每一轮中并不会分为两部分，在每一轮中仅仅是确定了基准元素的位置，在这种情况下效率就和冒泡排序差不多。</p><p>解决上述问题的办法很简单，及选择基准元素时<strong>随机选择一个元素作为基准元素</strong>，这样选的话同样有极小的机率选到数列的最大值或最小值，同样会影响到分治的效果。</p><p>因此，快速排序的平均时间复杂度是O(nlogn)，最坏情况下的时间复杂度是O(n^2)，所以，快速排序是一种不稳定排序。</p><h2 id="元素的移动"><a href="#元素的移动" class="headerlink" title="元素的移动"></a>元素的移动</h2><p>对于元素的移动有两种方式。</p><ul><li><p><strong>挖坑法</strong></p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token function">quickSort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>nums<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Arrays<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">quickSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span><span class="token keyword">int</span> startIndex<span class="token punctuation">,</span><span class="token keyword">int</span> endIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//递归结束条件的判断</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>startIndex <span class="token operator">&lt;</span> endIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//选择的第一个元素作为基准元素</span>            <span class="token keyword">int</span> pivot<span class="token operator">=</span>nums<span class="token punctuation">[</span>startIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//左右下标</span>            <span class="token keyword">int</span> left<span class="token operator">=</span>startIndex<span class="token punctuation">;</span>            <span class="token keyword">int</span> right<span class="token operator">=</span>endIndex<span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//找出右边比基准元素小的元素</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">>=</span> pivot<span class="token punctuation">)</span>                    right<span class="token operator">--</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//把找出的元素填到左边的坑中，左下标向后移一位</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token operator">=</span>nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">;</span>                    left<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">//找出左边比基准元素大的元素</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> pivot<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    left<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">//把找出的元素填到右边的坑中，右下标向前移一位</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token operator">=</span>nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>                    right<span class="token operator">--</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//上述循环完成后,left=right，将基准元素填入坑中</span>            nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token operator">=</span>pivot<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//将拆分的两部分递归执行上述操作</span>            <span class="token function">quickSort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span>startIndex<span class="token punctuation">,</span>left<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">quickSort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span>right<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>endIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre></li><li><p><strong>指针交换法</strong></p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token function">quickSort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>nums<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Arrays<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">quickSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span><span class="token keyword">int</span> startIndex<span class="token punctuation">,</span><span class="token keyword">int</span> endIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//递归结束条件的判断</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>startIndex <span class="token operator">&lt;</span> endIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//选择的第一个元素作为基准元素</span>            <span class="token keyword">int</span> pivot<span class="token operator">=</span>nums<span class="token punctuation">[</span>startIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//左右下标</span>            <span class="token keyword">int</span> left<span class="token operator">=</span>startIndex<span class="token punctuation">;</span>            <span class="token keyword">int</span> right<span class="token operator">=</span>endIndex<span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//找出右边比基准元素小的元素</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">>=</span> pivot<span class="token punctuation">)</span>                    right<span class="token operator">--</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//找出左边比基准元素大的元素,注意这两个循环的顺序，不能颠倒</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> pivot<span class="token punctuation">)</span>                    left<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//将找到的两个元素交换</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">int</span> t<span class="token punctuation">;</span>                    t<span class="token operator">=</span>nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>                    nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token operator">=</span>nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">;</span>                    nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token operator">=</span>t<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//上述循环完成后,left=right，将基准元素和两下标重合的元素交换</span>            <span class="token comment" spellcheck="true">//注意此处的startIndex是以基准元素的选择为准，及随着基准元素选择的改变而改变</span>            <span class="token comment" spellcheck="true">/* 一个列子，当选择中间数为基准元素时                int pivot=nums[(startIndex+endIndex)/2];                nums[(startIndex+endIndex)/2]=nums[left];                nums[left]=pivot;            */</span>            nums<span class="token punctuation">[</span>startIndex<span class="token punctuation">]</span><span class="token operator">=</span>nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>            nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token operator">=</span>pivot<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//将拆分的两部分递归执行上述操作</span>            <span class="token function">quickSort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span>startIndex<span class="token punctuation">,</span>left<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">quickSort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span>right<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>endIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre></li></ul><p>指针交换法和挖坑法相比较，元素的交换次数更少。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在上述内容中我所介绍的快速排序是十分基础的，对于快速排序还有很多改进的版本，我在这里说明一下：在选择基准元素的时候可以采用<strong>三数取中法</strong>；当排序序列的长度拆分到一定大小后，可以在其中<strong>使用插入排序</strong>（对于很小和部分有序的序列来说，快排没有插排好）； 对于在代码段的后面有两次递归操作，对于递归操作也可以<strong>通过栈来实现非递归操作</strong>。</p><p>总之，有兴趣的话可以深入的研究研究，对于我来说，目前对于快排的学习到达这个地步就行了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对于微信公众号的研究(后日谈)</title>
      <link href="/blog/2021/02/13/dui-yu-wei-xin-gong-zhong-hao-de-yan-jiu-hou-ri-tan/"/>
      <url>/blog/2021/02/13/dui-yu-wei-xin-gong-zhong-hao-de-yan-jiu-hou-ri-tan/</url>
      
        <content type="html"><![CDATA[<p>就在今天晚上我照常更新公众号的时候，群发完今日的ACG杂图后，等了5，6分钟，我收到了公众平台安全助手发来的通知，说是我的公众号因违反规则被<strong>永封</strong>了(警告都没有直接永封，这作法太……)。</p><img src="https://img.maocdn.cn/img/2021/02/13/15.jpg" height="800px" width="600px"><p>对于<strong>永封</strong>这个事件，<strong>标志着我对于公众号的研究走到了尽头</strong>。那我就总结一下我这近一个月的公众号更新的心得吧。</p><p>在这一个多月里，开头几天的更新算是比较耗时间，因为对于公众号本身的不熟悉。在干了几天后，轻车熟路了起来，更新所花费的时间变得少了，找素材的时间照旧，从中得出了一个道理，<strong>做同一件事做的多了，会得到名为技巧的东西。</strong>我对于技巧的理解为:<strong>技巧是那种前3成靠时间累积，中3成靠知识沉淀，后4成靠思维创新。</strong></p><p>最后，总结一下吧，对于公众号的研究已经完结了，永封的解除很难，在这个事件中我所吸取的教训为：身处一个平台时，应熟读当前平台的规则，在适合的情况下钻漏洞，别像我这样傻不拉几的因<strong>触犯规则</strong>(<del>咱们没有打破规则的能力，只能在边缘游走</del>)而被封号。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>吃瓜之lex事件整理</title>
      <link href="/blog/2021/02/08/chi-gua-zhi-lex-shi-jian-zheng-li/"/>
      <url>/blog/2021/02/08/chi-gua-zhi-lex-shi-jian-zheng-li/</url>
      
        <content type="html"><![CDATA[<p>对于一般性质的吃瓜事件我都是秉承着<strong>让子弹多飞一会儿</strong>的态度并且以<strong>观测者</strong>的身份入围，但我今天吃瓜竞吃到自己待的圈子上了，作为<strong>动漫爱好者</strong>(就一臭看动漫的)，因追番列表中有无职转生竞沦落为某知名UP主口中的人下人Σ(ﾟﾛﾟ;)。</p><h2 id="吃瓜指引"><a href="#吃瓜指引" class="headerlink" title="吃瓜指引"></a>吃瓜指引</h2><p>论如何举报B站UP主[LexBurner] ？- 知乎</p><p><a href="https://www.zhihu.com/question/443128396/answer/1717972242">https://www.zhihu.com/question/443128396/answer/1717972242</a></p><p>指路</p><p>2.1号蕾皇地图炮观众:<br><a href="https://www.bilibili.com/video/BV1ef4y167ZT">二次元教父之《无职转生》圣经</a></p><p>2.2号蕾皇直播辱骂无职长评作者:<br><a href="https://www.bilibili.com/video/BV1gK4y1Q741">LexBurner2月2日录播删减片段(带弹幕版)</a></p><p>2.3号蕾皇回复无职转生事件:<br><a href="https://www.bilibili.com/video/BV1nf4y1r7Vd">Lex对无职转生一事的回复</a></p><p>2.3号蕾皇直播cue泛式和瓶子:<br><a href="https://www.bilibili.com/video/BV1xX4y1N7Rj">雷皇yygq泛式和瓶子，不愧是人上人</a></p><p>2.4号蕾皇直播间吞钱:<br><a href="https://www.bilibili.com/video/BV1VK4y1Q7c4">【冲蕾战报】2.4录播片段 一万sc秒删事件</a><br><a href="https://b23.tv/rgNnTb">https://b23.tv/rgNnTb</a><br>2.5号蕾皇在王者峡谷道歉:<br><a href="https://b23.tv/vNMNPz">https://b23.tv/vNMNPz</a><br>无职转生作者的回应:<br><a href="https://b23.tv/He4fKg">https://b23.tv/He4fKg</a></p><h2 id="相关讨论"><a href="#相关讨论" class="headerlink" title="相关讨论"></a>相关讨论</h2><p>事件发生后，花了一些时间浏览了AB站、知乎、贴吧等等，收集了一些有意思的。</p><p>「泛式/录播」<strong>2月6日</strong>例行新番杂谈回   转自知乎 陈子浩<br>去看了泛式昨晚的录播，有点小感慨 ，链接我放评论区在第3分p。泛式从日本深夜动画的属性和中日差异，到互联网和现实界限模糊，再承认很多剧情的确恶心，肯定了动画制作组的作画和改编水平，并从创作者的角度去分析制作组哪里做得好，思考争议的第四集如何提高。真的，泛式讲的非常全面了，也算是非常客观。期间，他的妻子竹鱼一直想岔开他的话题，最后急了说道：“你说的话，和你对立的观众根本听不进去，他们只会把你说的话当做攻击你的武器”。泛式沉默了，说“难道我以后只能说观众爱听的东西了吗？”，又是一段沉默。<strong>果然，很快微博和豆瓣都有大量言论开始讨伐泛式，指责他为无职洗地，再到他不听老婆劝告，最后开始称呼他为“公狗”，诅咒他们离婚，把竹鱼对泛式的担心曲解为泛式洗地出轨把她气哭 。</strong><br>想说很多，咽下去了，就说三句吧：<br><strong>①泛式无愧于他的学历，逻辑和思考能力都是up中的一流。</strong><br><strong>②某些微博和豆瓣用户“围泛救蕾”的稍微要点脸。</strong><br><strong>③泛式竹鱼真是神仙爱情，祝白头偕老。</strong></p><p><img src="https://img.maocdn.cn/img/2021/02/08/6.png"></p><p><strong>对于无职(B站国区)下架的相关评论</strong></p><p>这波何止是双赢，这是<strong>五赢</strong>啊。</p><p>想看《无职转生》的观众不用当人下人。</p><p>讨厌《无职转生》的踢出了讨厌的动画。</p><p>蕾丝粉丝成功守护了自己最喜欢的哥哥。</p><p>蕾丝再次证明了自己二次元皇帝的实力。</p><p>叔叔再次保护了B站不受辣鸡动画的荼毒。</p><p>最重要的是，阿宅们终于听到了叔叔的真心话。</p><p><strong>“这里是BILIBILI，该滚的是你们二次元吧。”</strong> </p><hr><p>这次因为舆论导向，随意下架，。不把保护会员权益，只考虑自己问题，。，。太没原则了 </p><p><strong>B站的一些评论:</strong></p><p>一个被霸凌过的人，在直播带粉丝去霸凌其他动漫爱好者。<br>一个靠二次元起家恰饭的人，现在是急着与他的二次元的粉丝与历史迅速割裂。所谓吃奶骂娘不过如此。  </p><hr><p>几年前：<br>“本人在南京长大 由于父母是外来务工人员 也就是俗称的农民工” “原来快乐不是下班回家看动漫玩游戏这么简单啊 我也好想和他们一样去现充 去嗨 去逛这里逛那里 去各种以前想都不敢想的场合 然后猛然回首 还是看动漫玩游戏适合老子”<br>几年后：<br>“我对一个废物的心理成长是完全没有兴趣的”<br>“那种人属于或许我一辈子不会多看一眼的类型，我为什么要去了解他的生平”<br>“你要是成功人士看这种动画的心情就是体恤底层人士的那种感觉”<br>“如果你是人生赢家，你根本没必要去体会一个比你阶级低比你品行意志力都差的这么一个人的感受”<br>“像你们这种人只能在下水道里度过一个相对比较失败的人生” </p><hr><p>典型的小布尔乔亚的优越感逻辑<br>实际上不过是比上不足比下有余，本身靠平凡者的供养来生活<br>却因为对“上流阶层”的“崇拜”，不断放低身段去捡“上层”留下的残渣，可悲的希望得到“上层”的认同感<br>同时出于内心深处的自卑，不断想通过贬低平凡者来否认自己曾经也是平凡者一员的现实<br>他们的内心中渴望着通过这种方式达成“精神上的升层”，并借着“精神的升层”达成现实阶层的提升<br>实际上却忘记了精神的层次与现实的阶层并无太多关系<br>他们往往将自我的成功归结为个人奋斗的产物，而实际上这个阶级不乏大量以运气为主要成功因素的人<br>他们内心意识到也隐隐这点，而由此产生的自卑，使他们常常喜欢将大量的精力鼓吹自己的努力，殊不知将这些经历真正投入奋斗的人往往已超越了他们。（转发）</p><p><strong>贴吧的评论</strong></p><p><img src="https://img.maocdn.cn/img/2021/02/07/4.jpg"></p><p>近日，有国内的网友把lexburner吐槽《无职转生》的那些争议性言论放到了外网上，甚至直接传给了《无职转生》的小说原作者理不尽な孫の手。在看到作品被这么评价之后，理不尽な孫の手也是忍不住出来发声。</p><p><img src="https://img.maocdn.cn/img/2021/02/08/7.jpg"></p><p><img src="https://img.maocdn.cn/img/2021/02/08/8.jpg"></p><p><strong>lex新瓜速递，为了看这瓜，大半夜我冒着猝死的风险大概整理了一下</strong></p><p>①：lex在微博道歉，控评控住了。</p><p>②：lex一看微博情况不错，就去b站把微博的东西复制过去了，结果评论区没控制住，全是骂lex的。</p><p>③：不到一个小时，lex就以百万浏览夺得b站热搜第一，情况不容乐观。</p><p>④：b站不想把这个九百万粉丝的大流量舍弃掉，于是随机应变，偷梁换柱，把lex的热搜第一换成了“合成北大”（合成大西瓜的翻版，被b站随便找来当挡箭牌）</p><p>⑤：有人在这个挡箭牌up主的评论区说“只要你把b站删了，尴尬的就是陈睿，这瓜吃起来就好玩了”（原话见图），结果这个up主真把视频删了，留下来的热搜第一什么也搜不到。</p><p>⑥：过了二十几分钟，b站后知后觉，为了防止lex再回到热搜第一，b站强行把已经在周三更新过了的刺客伍六七拉到热搜第一，做lex的挡箭牌。</p><p>⑦：刺客伍六七的所有热门相关视频都被利用顶替lex相关内容。</p><p>⑧：lex被曝0级粉丝占比65.18％，b站转发区已经被控评；洗白评论往往只有一百赞，却有近千转发（因为每个号都可以转发很多次，所以可以请水军大规模转发以此置顶）</p><p>⑨：lex现在每分钟掉500粉丝，但是与此同时也有很多吃瓜群众和0级号在关注lex，如果不算刷的僵尸粉，lex现在的粉丝大概只有200w左右</p><p>有很多没有侮辱性词汇的评论和转发莫名消失，懂得都懂</p><p><img src="https://img.maocdn.cn/img/2021/02/08/10.jpg"></p><p><img src="https://img.maocdn.cn/img/2021/02/08/9.jpg"></p><p>【已排雷，请随意复制】<br>网爆路人只字不提，五年坚持头像抄袭。<br>天大错事言语过激，归根到底无职垃圾，<br>岔开话题便于洗地，假意道歉实则游戏。<br>一切录播都是曲解，所有截图都是放p，<br>三.十.打.赏.怎配提及，钱财至上三观成迷<br>网爆路人只字不提，五年坚持头像抄袭。<br>天大错事言语过激，归根到底无职垃圾，<br>岔开话题便于洗地，假意道歉实则游戏。<br>录播都是曲解，截图都是放p，<br>我们蕾皇永远没错，微博妈妈永远爱你。<br>请随意复制扩散下去<br>改良版本防jio本[吃瓜]<br>Iè×·事·件·真·正·的·痛·点，其·实·是·2·月·叁日·凌·晨·直·播·时，“有·本·事·上·个·總，都·再·来·说·话”，以·及·粉·丝·的“才·叁，，拾原·s·c·还·好·意·思·说·话”，这·些·已·经·可·以·去·举·报·诱·导·消·费·了。而·叔·術·也·很·聪·明，刷·的·圣·经·从·来·不·shan，只·shan·这·些·说·到·点·子·上·的·评·论扩散下去，大伙可以来试试[吃瓜]兄弟们，这条评论是被秒shan的，但是敌人惧怕什么我们就要拥护什么，刷起来开沖！兄弟们，这货不竟，天理难容！<br>又到了我最喜欢的算旧账时间[喜欢]：<br>①雷.黃之前和ka咪大媽起冲突，扬言要砍对方。后对方报警，雷.皇悻悻shan掉微博<br>②之前有次直播，雷.黄老婆说被被猫抓了，ta说太好了，你得狂犬病我就能再取一个了<br>③雷..晃头像是无授权二改p站画师作品，原画师受不了雷.斯粉丝ky注销账号<br>④雷.煌yy王者♀英雄，说“只要你 乖乖翘起皮.谷，我就让你懷，☁”之类的污言禾.岁语兄弟们，这条评论是被秒shan的，但是敌人惧怕什么我们就要拥护什么，刷起来开沖!</p><p>一个九百多万粉丝的up主，在直播的时候点进别人辛辛苦苦写的长评，甚至都懒得多看，就和自己的粉丝一起嘲笑他取乐。他粉丝现在居然还有脸说他被人网络暴力……（转）<br>这是他团队发布的<br>vvvvvvvvv<br>发布这条信息的时候，他王者荣耀开局8分钟 耀开局8分钟这是他团123八。，。，</p><p><img src="https://img.maocdn.cn/img/2021/02/08/11.jpg"></p><p><img src="https://img.maocdn.cn/img/2021/02/08/14.jpg"></p><p><img src="https://img.maocdn.cn/img/2021/02/08/12.jpg"></p><p><img src="https://img.maocdn.cn/img/2021/02/08/13.jpg"></p><h2 id="蕾丝黑点整理"><a href="#蕾丝黑点整理" class="headerlink" title="蕾丝黑点整理"></a>蕾丝黑点整理</h2><p>早期抄的gigguk和the anime man的文案，轮了这么多年了还没个清楚的解释，gigguk满分文案能被你抄成零分甚至负分，gigguk也满暴论，但是人比你高的地方就是说得出“anime is trash, and so am I”，成为油管大物也没像你一样做切割反踩一脚前受众，反而出资出力帮助建设海外动漫讨论社区，也不摆一副领头人的架子。</p><p>头像抄袭别人还说是原创 实锤(头像是抄的，当年被发现了。一群粉丝还去这个画师那里ky，把画师气的直接注销账号了。之后他就一直主张是一方，但其实是抄的)</p><p><img src="https://img.maocdn.cn/img/2021/02/07/5.jpg"></p><p>以前的视频里对社会主义口嗨 实锤</p><p>侮辱刘胡兰 打LOL时把乐芙兰称为刘胡兰“一会你们看我怎么打爆这个刘胡兰” 实锤</p><p>侮辱花木兰从军 “她一个女人去军营里能干什么 当军ji吗？“ 实锤</p><p>玩VR黄色游戏 实锤</p><p>微博里直接发猥琐内容 实锤</p><p>做动漫杂谈时造谣 实锤</p><p>骂虚拟角色破鞋 有争议</p><p>挑起阶级矛盾 看不起社会底层 有争议</p><p>诅咒写漫评的人被卡车撞死 实锤</p><p>点名嘲讽其他up主 实锤</p><p>然后他的粉丝做的事就不说了 不算在他头上</p><p><strong>对于这些年他所诋毁的作品</strong></p><p>1.银魂:lex本人诋毁空知英秋人品，明明是完结吐槽吐着吐着搞到作者人品上去了。暗自揣测编辑部与作者之间的关系。并且对于结尾也仅仅是马拉松一句带过丝毫不在乎完结篇的小玉线；对于剧情人物方面也有强硬找槽点的嫌疑；其文案也缝合了贴吧黑粉的言论</p><p>2.re0:在漫评中两次提到486不孝子(出门在外多想想你的父母，你这个不孝子)，并且在过了段时间后又出了期视频来夸re0，不曾想仅是为了恰饭而做此举</p><p>3.fate:直播中说蘑菇有破鞋癖，并指名道姓点到樱以下是他的原话:那个键同音啊，你们还说间桐樱啊，我，我就是因为有间桐樱，还有空之境界里的有一个那个，蘑菇就是喜欢有这种破鞋癖。且之后还恰了fgo的饭(听说他是个月黑，但其他黑点我不怎么清楚)</p><p>4.花木兰(不是王者荣耀的):打王者的时候，对线花木兰，说什么穿着还挺性感，你还替父从军，以为军中的男人性生活很丰富吗。然后底下有人抱怨他，蕾丝打完那一把之后有点生气的说什么那些人是钓鱼的，让房管禁言，说什么要及时互动，然后他点了好几个，说这事的人都没有关注过，他说你要关注我，给我打过钱，你说倒无所谓(这件事知乎上还有详细的回答)</p><p>5.魔法少女小圆:将剧情全部复述了一遍，但一直在抖机灵，没有理清故事的原委，还碰瓷石头门，最后“心不甘情不愿”的恰了口硬饭</p><p>6.死神:他说死神的完结烂尾烂的最彻底作品，并放言不会被动画化。然而事实却打了他狠狠的一巴掌，然后他在直播中也曾提到此事，但他并不在意，底下的骑士团便围攻死神评论区，开始血洗评论区(删评，拉黑)</p><p>7.国家队:说国家队媚宅程度太高(然而很多二次元作品都有这样的毛病)引得一群内鬼趁机举报国家队，并甩锅给蕾丝(有一说一，你蕾丝还是带了节奏，就算事情不是你能控制的了的，不是你的本意，但是此事由你而起)</p><p>8.夏洛特烦恼，美人鱼:吐槽过于尖锐有夺人眼球之嫌，说电影烂的一无是处，太过于绝对了，以他的逻辑就没有好的电影了，所有套路都能用语言表达，又有什么特别之处呢？(16年的蕾丝过于哗众取宠)</p><p>10.罪恶王冠:他说女主“花瓶”。认为网管中二至极。还因为作画失误的鬼畜镜头说制作组不尊重女主。。。然后以后的视频里都会时不时拉出来鞭尸，之后还恰了网管的饭，一点节操都没有，呸！</p><p>11.无职转生：这个不用我多说，懂得都懂，我们都是《底层人士》</p><p>转自B站</p><p><strong>上述黑点可以总结为:</strong></p><p><strong>《蕾神演义》</strong></p><p>第一回：黑王冠蕾丝初成功 评春物误导新人众</p><p>第二回：阴阳怪气石头门 配角只配工具人</p><p>第三回：广告甲方喜登场 蕾电法王恰饭忙</p><p>第四回：夏洛特逻辑太不好 EVA弹幕惹人恼</p><p>第五回：小圆硬饭太难咽 视频不如看简介</p><p>第六回：死神缝纫贴吧观点 fate直指间桐破鞋</p><p>第七回：银魂众人齐惋惜 蕾皇一人逆风评</p><p>第八回：“486不孝” “国家队瑟情”</p><p>第九回：Re0评分狂跌 空知英秋被污蔑</p><p>第十回：死神动画惊天逆转 新Re0洗刷污名</p><p>第十一回：银魂辟谣终面世 小将举报引痛斥</p><p>第十二回：无心漫评转型生活 饭圈初成忙立人设 </p><p>lex现在的更新经典语录“成功人士看啥无职呀” 那些都陈年往事辽，但仍记忆犹新</p><p>快给我蕾皇磕头，拜见一下2次元教父呀，哄直播间小姐姐开心。</p><h2 id="对这个事件的感悟"><a href="#对这个事件的感悟" class="headerlink" title="对这个事件的感悟"></a>对这个事件的感悟</h2><p>lex在B站作为拥有900W粉的UP主，其拥有很大的影响力，在这种情况下仍口无遮拦，自顾自的口嗨，甚至上升到攻击其他UP主（人家辛苦写的长评他看都没看完就评为一坨狗屎，甚至说出<strong>你也被大卡车撞过</strong>的NC言论）以及地图炮所有追番人（呵呵，我这个人下人不配和您这种成功人士相提并论）。</p><p>况且，此人黑点如上述列出的那样。魔禁、死神、王冠等等的粉丝对他可是恨的要死，就拿银魂来举例，他造谣倒是造的爽，甚至那期文案是抄来的在加些许缝合，可怜那些辟谣者辛苦辟谣，就因他，败坏了多少被他黑过的作品的路人源。</p><p>最后，总结一下，作为拥有一定影响力的公众人物，应当对自己的粉丝负责，不要传播不健康、不积极的东西，管好自己那张嘴，没事别瞎BB，有这空还不如去学习，多看看书，增强自身的修养，提高自己的眼界。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 吃瓜 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Processing语言介绍</title>
      <link href="/blog/2021/01/28/processing-yu-yan-jie-shao/"/>
      <url>/blog/2021/01/28/processing-yu-yan-jie-shao/</url>
      
        <content type="html"><![CDATA[<p>最近了解到了一门语言，名叫Processing，这是一个开放原始码的程序语言及开发环境，提供给那些想要对<strong>影像和动画及声音</strong>进行程序编辑的工作者。此外，学生、艺术家、设计师、建筑师、研究员以及有兴趣的人，也可以用来学习，开发原型及制作。简单来说，Processing可以称作为一门画画的编程语言，面向的人群为艺术家和设计师。</p><h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h2><p><strong>链接：</strong><a href="https://processing.org/">https://processing.org/</a></p><p>点击链接，点击Download Processing跳转，选择合适的版本下载，及下及用，不需要配置烦人的开发环境。</p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Processing 是用 <strong>Java</strong> 编程语言写的，所以 Processing 应用程序是翻译成 Java 代码执行，基于java特性，Processing<strong>多平台支持</strong>。同时，这门语言对新手友好，这一点来源于其<strong>图形交户</strong>，如果您熟悉 C 或 Java 语言，Processing 将很容易学。简单来说，Processing 就是 Java + 一些库。</p><p>那么，Processing主要的应用场景，及Processing能干吗？</p><ul><li><p>生成艺术</p></li><li><p>2D游戏</p></li><li><p>交互式物理系统</p></li><li><p>数据可视化</p></li><li><p>UI</p></li><li><p>大热的计算机视觉和machine learning （通过Open-CV）</p></li><li><p>声音可视化 （外接MIDI做音乐）</p></li></ul><p>以下是Processing的作品。</p><p><img src="http://iprocessing.cn/wp-content/uploads/2020/09/gif-2.gif"></p><p><img src="https://mc.dfrobot.com.cn/data/attachment/forum/201701/03/125214m2d9n284z828iooz.gif"><br><img src="https://mc.dfrobot.com.cn/data/attachment/forum/201701/03/125241a7hhk33321kd8n1u.gif"><br>最后，介绍一个交流Processing的网站。</p><p>网站名：Processing编程艺术，链接：<a href="http://iprocessing.cn/">http://iprocessing.cn/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对波士顿机器人の观后感</title>
      <link href="/blog/2021/01/26/dui-bo-shi-dun-ji-qi-ren-noguan-hou-gan/"/>
      <url>/blog/2021/01/26/dui-bo-shi-dun-ji-qi-ren-noguan-hou-gan/</url>
      
        <content type="html"><![CDATA[<p> 前一段时间，我看了一个关于机器人的视频，观后直呼NB。</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><p><strong>观看地址:</strong> <a href="https://www.bilibili.com/video/BV1nz4y1r7vt">https://www.bilibili.com/video/BV1nz4y1r7vt</a></p><p>网站：B站                UP主：柚子木字幕组</p><p>在B站看了一圈，这个链接下的视频完整并且评论区讨论和谐（<del>点都不像隔壁观网的评论区</del>）。</p><h2 id="观后感"><a href="#观后感" class="headerlink" title="观后感"></a>观后感</h2><p>很早以前对于波士顿的机器人我看过一个在地上跑步的视频，当时并没觉得那么震撼，而这个视频我看后感到深深的震惊，怎么说呢，动作太流畅了，据我考证，这个视频<strong>并非CG</strong>，而有个相关的恶搞视频是CG，其地址为：<a href="https://www.bilibili.com/video/BV1x4411V7oh">https://www.bilibili.com/video/BV1x4411V7oh?</a>，有些人没分清楚，就以为波士顿动力发的视频都是CG做的，我再强调一次，<strong>这个视频并非CG</strong>。那么，具体看完后，除了卧槽还是卧槽。总的来说，时间在流逝，科技在进步，这预示着未来的发展，就如同现在街上的汽车，人手一个的智能手机。期待的同时又对于新事物有些许恐惧，毕竟我这等佛系老人早已没了动力。最后，怎么说呢，期待未来越来越美好吧！<del>（那么，在我有生之年里能看到VR和人脑神经相结合的技术吗）</del></p><p><img src="https://img.maocdn.cn/img/2021/01/27/-1.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>音频驱动失效(代码19)</title>
      <link href="/blog/2021/01/24/yin-pin-qu-dong-shi-xiao-dai-ma-19/"/>
      <url>/blog/2021/01/24/yin-pin-qu-dong-shi-xiao-dai-ma-19/</url>
      
        <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>在个别情况下，比如说使用CamtasiaStudio软件后没给予权限，使得电脑没有声音，并在设备管理器中提示：</p><p>“由于其配置信息(注册表中的)不完整或已损坏，Windows 无法启动这个硬件设备。 (代码 19)。”</p><img src="https://exp-picture.cdn.bcebos.com/3c42a5ea3e86304807178b61c33104ebf7a752e9.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1%2Fformat%2Cf_jpg%2Fquality%2Cq_80"><p>对于这种问题，该如何解决呢？</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><h4 id="重置系统"><a href="#重置系统" class="headerlink" title="重置系统"></a>重置系统</h4><p>这是最简单粗暴的办法，俗话说的好，大部分的电脑问题靠重启就可以解决，解决不了的靠重置系统，要是重置系统都解决不了，还有一个最终手段，新买一台电脑。</p><p>步骤：1、打开设置并点击更新和安全。</p><p><img src="https://s3.jpg.cm/2021/01/24/o94zH.png"></p><p>2、点击恢复。</p><p><img src="https://s3.jpg.cm/2021/01/24/o9fIL.png"></p><p>3、点击开始。</p><p><img src="https://s3.jpg.cm/2021/01/24/o9gcf.png"></p><p>4、按照自己的需求点击。</p><p><img src="https://s3.jpg.cm/2021/01/24/o9oJ2.png"></p><h4 id="注册表方式"><a href="#注册表方式" class="headerlink" title="注册表方式"></a>注册表方式</h4><p>1、按下windows键+R键，输入regedit，打开注册表编辑器。</p><img src="https://exp-picture.cdn.bcebos.com/5e4e9c2b74ee1c32244c0d9907f1d8a727334be9.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1%2Fformat%2Cf_jpg%2Fquality%2Cq_80"><p>2、在注册表中定位到：</p><p>计算机\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Class{4d36e96c-e325-11ce-bfc1-08002be10318}</p><p><strong>解释一下{4d36e96c-e325-11ce-bfc1-08002be10318}为出问题设备的类 Guid的值。</strong></p><p><img src="https://s3.jpg.cm/2021/01/24/o90iO.png"></p><p><strong><em>注意：这一类有很多，不要找错了，检查右侧class项是否为MEDIA\</em></strong></p><p><img src="https://exp-picture.cdn.bcebos.com/d9e638334884cde33d780a5bf07f860e7d7542e9.jpg?x-bce-process=image/resize,m_lfit,w_500,limit_1/format,f_jpg/quality,q_80"></p><p>3、双击UpperFilters项，删除其中的内容。</p><p><img src="https://exp-picture.cdn.bcebos.com/874f6275e5f4fcf59359667b21d7726b0de2bde9.jpg?x-bce-process=image/resize,m_lfit,w_500,limit_1/format,f_jpg/quality,q_80"></p><p>4、确保UpperFilters项数值为空后，关闭注册表编辑器。</p><p><img src="https://exp-picture.cdn.bcebos.com/3b8fb4d7726b0ce2e7b368baef781423bfb9b6e9.jpg?x-bce-process=image/resize,m_lfit,w_500,limit_1/format,f_jpg/quality,q_80"></p><p>5、计算机→右键→管理</p><p><img src="https://exp-picture.cdn.bcebos.com/354e7a781423beb9f16a7d7730d6e1d06ce8b3e9.jpg?x-bce-process=image/resize,m_lfit,w_500,limit_1/format,f_jpg/quality,q_80"></p><p>6、在设备管理器中，找到音频设备，右键→禁用</p><p><img src="https://exp-picture.cdn.bcebos.com/bff8683e21c2bbd66b84315d116186254093aee9.jpg?x-bce-process=image/resize,m_lfit,w_500,limit_1/format,f_jpg/quality,q_80"></p><p>7、禁用后再启用。即手动重启该设备。然后就可以正常启用设备了。如果不能立即生效记得重启电脑。</p><p><img src="https://exp-picture.cdn.bcebos.com/6ca984618625419341bcecb1df1bd10ff326abe9.jpg?x-bce-process=image/resize,m_lfit,w_500,limit_1/format,f_jpg/quality,q_80"></p><h2 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h2><p>最后，我说一下我遇到这个问题的解决思路。我遇到这个问题2次了，第一次我搜索无果后，就直接重置系统，简单粗暴。在今天我又遇到了这个问题，因在家无聊，就在互联网上找了很久，并逐一实践，最终找到了解决办法。因此，当遇到问题时，善用搜索引擎，能够解决大部分的问题，当然，主要还是你得实践，毕竟实践出真知。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java notes</title>
      <link href="/blog/2021/01/23/java-notes/"/>
      <url>/blog/2021/01/23/java-notes/</url>
      
        <content type="html"><![CDATA[<p>在我上一学期的时候，因自己不想作笔记，就在互联网上嫖了一份笔记，并做成一份网页的形式。</p><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p><strong>java notes:</strong> <a href="http://hai-chao.gitee.io/java-notes">http://hai-chao.gitee.io/java-notes</a></p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul><li>这份笔记是关于<strong>java基础</strong>的。</li><li>不建议没有学过java基础的人看，这份笔记更多是用来给学过的人<strong>回顾</strong>及<strong>巩固</strong>知识用的。</li><li>里面没有GUI的内容。</li></ul><h2 id="期望"><a href="#期望" class="headerlink" title="期望"></a>期望</h2><p>java基础是十分重要的，我自身对于java基础的掌握算是一般水平，还有网络编程、多线程、反射等知识没有学习。故在这个寒假中我将学习这三方面的内容。在学习的过程中会以博文的形式记录学习笔记，在学习完成之后会作一个关于java基础的总结。</p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10我常用的快捷键</title>
      <link href="/blog/2021/01/21/win10-wo-chang-yong-de-kuai-jie-jian/"/>
      <url>/blog/2021/01/21/win10-wo-chang-yong-de-kuai-jie-jian/</url>
      
        <content type="html"><![CDATA[<p>今天我记录的是自己常用的win10快捷键。</p><hr><h2 id="快速显示桌面"><a href="#快速显示桌面" class="headerlink" title="快速显示桌面"></a>快速显示桌面</h2><p><strong>Win键+D</strong></p><p>快速显示桌面，很有用的一个快捷键，懂的都懂(≧ω≦) ，我也不过多赘述。</p><hr><h2 id="打开文件管理器"><a href="#打开文件管理器" class="headerlink" title="打开文件管理器"></a>打开文件管理器</h2><p><strong>Win键+E</strong></p><p>打开文件管理器，及打开我的电脑，学会这个快捷键，再也不用傻乎乎的用鼠标来点了。</p><p>对于文件管理器，里面也有一些常用的键盘操作，我同样举例我最常用的。</p><h4 id="关闭当前的“文件资源管理器”窗口"><a href="#关闭当前的“文件资源管理器”窗口" class="headerlink" title="关闭当前的“文件资源管理器”窗口"></a>关闭当前的“文件资源管理器”窗口</h4><p><strong>Ctrl + W</strong></p><h4 id="在界面的各个部分之间循环"><a href="#在界面的各个部分之间循环" class="headerlink" title="在界面的各个部分之间循环"></a>在界面的各个部分之间循环</h4><p><strong>Tab键</strong></p><h4 id="反向循环"><a href="#反向循环" class="headerlink" title="反向循环"></a>反向循环</h4><p><strong>Shift + Tab</strong></p><p>在选择主内容窗格的情况下，用这个快捷键就会聚焦到左侧边栏。</p><h4 id="重命名文件"><a href="#重命名文件" class="headerlink" title="重命名文件"></a>重命名文件</h4><p><strong>F2键</strong></p><p>在选中文件的时候按F2，修改完成后按Enter键确定，按Escape键取消重命名。</p><h4 id="打开上下文菜单"><a href="#打开上下文菜单" class="headerlink" title="打开上下文菜单"></a>打开上下文菜单</h4><p><strong>Shift + F10</strong></p><p>在选中文件的时候按下这个快捷键，将会弹出上下文的菜单。</p><hr><p>以上，是针对文件资源管理器窗口的一些常用操作，我没有列举完，像新建一个文件夹，快速聚焦到搜索栏、窗口顶部这些操作，若你感兴趣，可以自行去了解。</p><hr><h2 id="打开Windows-10设置"><a href="#打开Windows-10设置" class="headerlink" title="打开Windows 10设置"></a>打开Windows 10设置</h2><p><strong>Win键+I</strong></p><p>这个快捷键的作用就是打开win10的设置。</p><hr><h2 id="锁定屏幕"><a href="#锁定屏幕" class="headerlink" title="锁定屏幕"></a>锁定屏幕</h2><p><strong>Win键+L</strong></p><p>很好用，使用场景为你稍微要离开你的电脑一会，就可以用这个快捷键。</p><hr><h2 id="虚拟桌面"><a href="#虚拟桌面" class="headerlink" title="虚拟桌面"></a>虚拟桌面</h2><h4 id="创建一个新的虚拟桌面"><a href="#创建一个新的虚拟桌面" class="headerlink" title="创建一个新的虚拟桌面"></a>创建一个新的虚拟桌面</h4><p><strong>Win键+Ctrl+D</strong></p><h4 id="关闭最近使用的虚拟桌面"><a href="#关闭最近使用的虚拟桌面" class="headerlink" title="关闭最近使用的虚拟桌面"></a>关闭最近使用的虚拟桌面</h4><p><strong>Win键+Ctrl+F4</strong></p><h4 id="切换虚拟桌面"><a href="#切换虚拟桌面" class="headerlink" title="切换虚拟桌面"></a>切换虚拟桌面</h4><p><strong>Win键+Ctrl+左/右</strong></p><hr><p>这个我说实话，我不常用这一组关于虚拟桌面的快捷键。</p><hr><h2 id="窗口"><a href="#窗口" class="headerlink" title="窗口"></a>窗口</h2><h4 id="移动应用窗口"><a href="#移动应用窗口" class="headerlink" title="移动应用窗口"></a>移动应用窗口</h4><p><strong>Win键+左/右/上/下</strong></p><h4 id="切换窗口"><a href="#切换窗口" class="headerlink" title="切换窗口"></a>切换窗口</h4><p><strong>Alt+Tap</strong></p><h4 id="最大化窗口"><a href="#最大化窗口" class="headerlink" title="最大化窗口"></a>最大化窗口</h4><p><strong>Alt+空格+X</strong></p><hr><p>对于桌面双频操作，这一组快捷键是基础。</p><hr><h2 id="任务管理器"><a href="#任务管理器" class="headerlink" title="任务管理器"></a>任务管理器</h2><p><strong>Ctrl+Shift+ESC</strong></p><p>打开任务管理器的最快方式，也是我最常用的。</p><hr><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><strong>Win+Shift+S</strong></p><p>我最常用的方式，截图保存在剪贴板中。</p><hr><h2 id="剪贴板"><a href="#剪贴板" class="headerlink" title="剪贴板"></a>剪贴板</h2><p><strong>Windows+V</strong></p><p>剪贴板的快捷键，剪贴板能够保存25条历史记录。</p><hr><h2 id="关机-amp-关闭窗口"><a href="#关机-amp-关闭窗口" class="headerlink" title="关机&amp;关闭窗口"></a>关机&amp;关闭窗口</h2><p><strong>Alt+F4</strong></p><p>关机的快捷键还有其他的方式，我常用的这个是在桌面使用的，在桌面使用这个快捷键会弹出一个关机的窗口，注意，<strong>若不是在桌面使用，而是在应用窗口中使用，效果会变成关闭当前的应用窗口。</strong></p><hr><h2 id="F1-F12的作用"><a href="#F1-F12的作用" class="headerlink" title="F1~F12的作用"></a>F1~F12的作用</h2><p>相信对于小白来说有可能不知道F1到F12的作用，我在这里就简单的科普一下。</p><h4 id="F1"><a href="#F1" class="headerlink" title="F1"></a>F1</h4><p>打开帮助窗口。</p><p>在win10系统下的软件打开后按F1会打开帮助窗口界面。</p><h4 id="F2"><a href="#F2" class="headerlink" title="F2"></a>F2</h4><p>更改文件名字。</p><p>在选中文件的时候，按下F2会重命名。</p><h4 id="F3"><a href="#F3" class="headerlink" title="F3"></a>F3</h4><p>搜索。</p><p>按下F3，会聚焦到当前应用的搜索栏上。</p><h4 id="F4"><a href="#F4" class="headerlink" title="F4"></a>F4</h4><p>定位地址。</p><p>在浏览器中按下F4，会定位到地址栏上。</p><h4 id="F5"><a href="#F5" class="headerlink" title="F5"></a>F5</h4><p>快速刷新页面。</p><h4 id="F6"><a href="#F6" class="headerlink" title="F6"></a>F6</h4><p>恢复。</p><p>在按下F3或F4出现在搜索或在地址栏上的时候，按下F6就会恢复到刚开始的界面。</p><h4 id="F7"><a href="#F7" class="headerlink" title="F7"></a>F7</h4><p>选择dos命令。</p><p>在cmd中按下F7就会弹出记录刚刚录入的dos命令。</p><h4 id="F8"><a href="#F8" class="headerlink" title="F8"></a>F8</h4><p>系统启动方式。</p><p>在win10系统启动时按下F8，会进入选择什么方式启动系统界面。</p><h4 id="F9"><a href="#F9" class="headerlink" title="F9"></a>F9</h4><p>提高音量。</p><p>F9能提高windows media的音量。</p><h4 id="F10"><a href="#F10" class="headerlink" title="F10"></a>F10</h4><p>快捷键导航。</p><p>在一个文件夹下按F10，会出现快捷键导航。</p><h4 id="F11"><a href="#F11" class="headerlink" title="F11"></a>F11</h4><p>最大化。</p><p>按下F11可以使窗口最大化，再按一次会恢复到原来的大小。</p><h4 id="F12"><a href="#F12" class="headerlink" title="F12"></a>F12</h4><p>调试用。</p><p>浏览器中按下F12会出现开发者使用的模式，用于调试网页程序用。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对于微信公众号的研究</title>
      <link href="/blog/2021/01/20/dui-yu-wei-xin-gong-zhong-hao-de-yan-jiu/"/>
      <url>/blog/2021/01/20/dui-yu-wei-xin-gong-zhong-hao-de-yan-jiu/</url>
      
        <content type="html"><![CDATA[<p>最近几天无所事事，就去研究了一下公众号，我所选择的平台是微信，创建的是微信订阅号。</p><h2 id="创建过程"><a href="#创建过程" class="headerlink" title="创建过程"></a>创建过程</h2><p>新注册一个公众号，需注意的是一个身份证可以注册一个帐号，一个营业执照可以注册两个。大体上没有其他的难点了。</p><p>注册地址是在：<a href="https://mp.weixin.qq.com/">https://mp.weixin.qq.com/</a></p><p>在创建过程中还有一个需要注意的是公众号的命名。命名尽可能的不要重复，当命名检测到有相同的词时，创建是不会成功的。</p><h2 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h2><p>那么，对于我创建一个微信公众号有什么好处呢？具体的好处有以下几点：</p><ul><li><p><strong>锻炼写文章的能力</strong><br>写文章是一个很重要的一个技能点，可以借由这个机会来锻炼自身对于文章的把控，你可能会说自己不是新闻、媒体中文等相关专业的，不适合写公众号文章，但是作为个人公众号来说你需要注重的是你表达的内容，而且文采也是通过不断练习来达到的。我作为计科的学生，学校规划的路线是java，那么写公众号文章对于我以后写文档是有着一定帮助的。</p></li><li><p><strong>变现</strong><br>写公众号文章是可以赚点小钱的。公众号的变现方式也有不少，我在这里着重介绍一下对于公众号的变现方式。<br>1、<strong>流量主</strong>。流量主不同于广告主，是不需要微信认证（个人微信公众号是不能微信认证）的，只需简单申请，即可成为流量主，申请的条件也很简单，只要有<strong>500个粉丝</strong>，就可以申请。申请成功后可以按月获取广告收入，简单说，只要别人，点了你的文章看，你就有收入，及写了文章，就可以躺着收钱了。<br>2、<strong>打赏</strong>。这个很简单，当你的文章写得足够好，就会有人给你打赏。<br>3、<strong>卖公众号</strong>。当你不想在运营的时候，就可以选择卖号。这个具体要看你号的质量，一般一个十万粉丝的质量号，能够卖三十万左右，这个操作的本质是卖粉丝，这也是一种重要的变现方式。<br>4、<strong>引流</strong>。这个操作是当你有一定的粉丝基础后，你可以通过一些方式将这个公众号上的粉丝引到其他地方，如你在其他平台建的号啊等等。</p></li></ul><h2 id="发展前景"><a href="#发展前景" class="headerlink" title="发展前景"></a>发展前景</h2><p>在我发这一篇博文的时候，其实公众号的热潮已经退去，现在是短视频的时代，2020年短视频带货，直播带货遍地走，那我为什么要来经营一个微信公众号呢？其原因是为了第一个好处，锻炼写文章的能力同时如果没人关注的话就相当于建立了一个私人的图库。目前我对于我的那个公众号的规划是，先转载后原创。建立好了一个公众号之后，最为重要的是每日的更新，贵在坚持。</p><hr><p>最后，我建立的公众号是与ACG相关的，希望大家<strong>多多支持</strong>。</p><img src="http://img.wwery.com/washen/c95570123051820.jpg">]]></content>
      
      
      
        <tags>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站收录</title>
      <link href="/blog/2021/01/14/wang-zhan-shou-lu/"/>
      <url>/blog/2021/01/14/wang-zhan-shou-lu/</url>
      
        <content type="html"><![CDATA[<p>近两天闲来无事，在互联网上冲浪了一把，发现了很多有趣的网站，故记录下来。</p><h2 id="小霸王"><a href="#小霸王" class="headerlink" title="小霸王"></a>小霸王</h2><p><strong>链接 :</strong> <a href="https://www.yikm.net/">https://www.yikm.net/</a></p><p>找回童年的快乐，内置很多FC，街机游戏。</p><h2 id="ZType"><a href="#ZType" class="headerlink" title="ZType"></a>ZType</h2><p><strong>链接 :</strong> <a href="https://zty.pe/">https://zty.pe/</a></p><p>这是一个关于打字的小游戏，可以用作打字练习。</p><h2 id="萌码"><a href="#萌码" class="headerlink" title="萌码"></a>萌码</h2><p><strong>链接 :</strong> <a href="https://mengma.moe/">https://mengma.moe/</a></p><p>包含常用的颜文字(￣▽￣)。</p><h2 id="Yandex"><a href="#Yandex" class="headerlink" title="Yandex"></a>Yandex</h2><p><strong>链接 :</strong> <a href="https://yandex.com/">https://yandex.com/</a></p><p>俄罗斯的搜索引擎，支持中文搜索，可搜到一些有趣的东西(｡･ω･｡)。</p><h2 id="Indienova"><a href="#Indienova" class="headerlink" title="Indienova"></a>Indienova</h2><p><strong>链接 :</strong> <a href="https://indienova.com/">https://indienova.com/</a></p><p>独立游戏相关，可以了解到独立游戏的很多咨询。</p><h2 id="HelloGitHub"><a href="#HelloGitHub" class="headerlink" title="HelloGitHub"></a>HelloGitHub</h2><p><strong>链接 :</strong> <a href="https://hellogithub.com/">https://hellogithub.com/</a></p><p>分享GitHub上有趣、入门级的开源项目。</p><h2 id="网易云游戏平台"><a href="#网易云游戏平台" class="headerlink" title="网易云游戏平台"></a>网易云游戏平台</h2><p><strong>链接 :</strong> <a href="https://cg.163.com/">https://cg.163.com/</a></p><p>支持在网页上游玩手机，PC上的游戏，免费游玩的时间有限，需每日签到领取游玩时间，经测试，游戏卡顿明显，不知道充钱成为会员开启的高速游玩的速度如何。</p><h2 id="书签地球"><a href="#书签地球" class="headerlink" title="书签地球"></a>书签地球</h2><p><strong>链接 :</strong> <a href="https://www.bookmarkearth.com/">https://www.bookmarkearth.com/</a></p><p>分享个人书签的网站，能从别人分享的书签中找到自己需要的网站。</p><h2 id="四海吧"><a href="#四海吧" class="headerlink" title="四海吧"></a>四海吧</h2><p><strong>链接 :</strong> <a href="https://sihaiba.com/">https://sihaiba.com/</a></p><p>挺不错的一个网站，在里面能够找到一些好玩的，是一个互联网内容的资源分享平台。</p><h2 id="LearningMusic"><a href="#LearningMusic" class="headerlink" title="LearningMusic"></a>LearningMusic</h2><p><strong>链接 :</strong> <a href="https://learningmusic.ableton.com/zh-Hans/">https://learningmusic.ableton.com/zh-Hans/</a></p><p>能学习到音乐创作的基础知识，无需任何经验或设备， 在浏览器中可完成所有工作。</p><h2 id="自由钢琴"><a href="#自由钢琴" class="headerlink" title="自由钢琴"></a>自由钢琴</h2><p><strong>链接 :</strong> <a href="https://www.autopiano.cn/">https://www.autopiano.cn/</a></p><p>无聊时可来听听各个乐器的声音，定能治愈心灵。</p><hr><p>最后，分享一个发现的黑科技。</p><p><strong>万能书签</strong></p><p>在任意的 URL 前添加 <code>wn.run/</code> 能看到该网页支持哪些神奇有意思的功能，比如网页翻译，PC模拟，视频下载解析等。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown学习记录</title>
      <link href="/blog/2021/01/12/markdown-xue-xi-ji-lu/"/>
      <url>/blog/2021/01/12/markdown-xue-xi-ji-lu/</url>
      
        <content type="html"><![CDATA[<p>Markdown是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。Markdown编写的文档的后缀名为<code>.md</code>。下面我将记录Markdown的常用语法。</p><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>用#来表示1~6级标题，几级标题对应有几个#号，例如:</p><pre class=" language-java"><code class="language-java"># 一级标题### 三级标题</code></pre><p>注意事项:#号后面要加一个<strong>空格</strong>。</p><h2 id="段落格式"><a href="#段落格式" class="headerlink" title="段落格式"></a>段落格式</h2><p><strong>换行</strong><br>两个空格加一个回车。<br><strong>分割线</strong><br>三个及三个以上的减号（-）号。<br><strong>删除线</strong></p><pre class=" language-java"><code class="language-java"><span class="token operator">~</span><span class="token operator">~</span>删除的内容<span class="token operator">~</span><span class="token operator">~</span></code></pre><p><strong>下划线</strong></p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>u<span class="token operator">></span>加下划线的内容<span class="token operator">&lt;</span><span class="token operator">/</span>u<span class="token operator">></span></code></pre><p><strong>脚注</strong></p><pre class=" language-java"><code class="language-java">内容<span class="token punctuation">[</span><span class="token operator">^</span>test<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">^</span>text<span class="token punctuation">]</span><span class="token operator">:</span>内容的意思</code></pre><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p><strong>无序列表</strong><br>用星号(<code>*</code>)、加号(<code>+</code>)或是减号(<code>-</code>)作为列表标记，后面加一个<strong>空格</strong>。<br><strong>有序列表</strong><br>数字1加一个点（.）。<br><strong>列表嵌套</strong><br>子列表前加4个空格。</p><h2 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h2><p><code>&gt;</code>加一个空格。</p><pre class=" language-java"><code class="language-java"><span class="token operator">></span> 区块引用<span class="token operator">></span> 今天天气真好！</code></pre><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p><strong>`代码`</strong><br><strong>```<br>代码段<br>```</strong></p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p>用法如下:</p><pre class=" language-java"><code class="language-java">用法一<span class="token operator">:</span><span class="token punctuation">[</span>链接名称<span class="token punctuation">]</span><span class="token punctuation">(</span>链接地址<span class="token punctuation">)</span>  或  <span class="token operator">&lt;</span>链接地址<span class="token operator">></span>用法二<span class="token operator">:</span>通过变量来设置一个链接，变量赋值在文档末尾进行这个链接用 <span class="token number">1</span> 作为网址变量 <span class="token punctuation">[</span>Google<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>这个链接用 runoob 作为网址变量 <span class="token punctuation">[</span>Runoob<span class="token punctuation">]</span><span class="token punctuation">[</span>runoob<span class="token punctuation">]</span>然后在文档的结尾为变量赋值（网址）  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">:</span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>google<span class="token punctuation">.</span>com<span class="token operator">/</span>  <span class="token punctuation">[</span>runoob<span class="token punctuation">]</span><span class="token operator">:</span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>runoob<span class="token punctuation">.</span>com<span class="token operator">/</span></code></pre><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><pre class=" language-java"><code class="language-java"><span class="token operator">!</span><span class="token punctuation">[</span>alt 属性文本<span class="token punctuation">]</span><span class="token punctuation">(</span>图片地址<span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">[</span>alt 属性文本<span class="token punctuation">]</span><span class="token punctuation">(</span>图片地址 <span class="token string">"可选标题"</span><span class="token punctuation">)</span></code></pre><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><pre class=" language-java"><code class="language-java"><span class="token operator">|</span>  表头   <span class="token operator">|</span> 表头  <span class="token operator">|</span><span class="token operator">|</span>  <span class="token operator">--</span><span class="token operator">--</span>  <span class="token operator">|</span> <span class="token operator">--</span><span class="token operator">--</span>  <span class="token operator">|</span><span class="token operator">|</span> 单元格  <span class="token operator">|</span> 单元格 <span class="token operator">|</span><span class="token operator">|</span> 单元格  <span class="token operator">|</span> 单元格 <span class="token operator">|</span></code></pre><p>说明:可以设置表格的对齐方式</p><pre class=" language-java"><code class="language-java"><span class="token operator">|</span> 左对齐 <span class="token operator">|</span> 右对齐 <span class="token operator">|</span> 居中对齐 <span class="token operator">|</span><span class="token operator">|</span> <span class="token operator">:</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">|</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">:</span> <span class="token operator">|</span> <span class="token operator">:</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">:</span> <span class="token operator">|</span><span class="token operator">|</span> 单元格 <span class="token operator">|</span> 单元格 <span class="token operator">|</span> 单元格 <span class="token operator">|</span><span class="token operator">|</span> 单元格 <span class="token operator">|</span> 单元格 <span class="token operator">|</span> 单元格 <span class="token operator">|</span></code></pre><p><code>:-</code>表示左对齐，<code>:-:</code>表示居中对齐,<code>:-</code>表示右对齐。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
